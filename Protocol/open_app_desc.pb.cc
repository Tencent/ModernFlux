// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: open_app_desc.proto

#include "open_app_desc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace open_app_desc {
class CmdBaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdBase>
      _instance;
} _CmdBase_default_instance_;
class CmdBaseRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CmdBaseResp>
      _instance;
} _CmdBaseResp_default_instance_;
class L5cfgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<L5cfg>
      _instance;
} _L5cfg_default_instance_;
class FluxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Flux>
      _instance;
} _Flux_default_instance_;
class ReportItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportItem>
      _instance;
} _ReportItem_default_instance_;
class QuotaReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuotaReq>
      _instance;
} _QuotaReq_default_instance_;
class QuotaRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuotaRsp>
      _instance;
} _QuotaRsp_default_instance_;
class SetItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetItem>
      _instance;
} _SetItem_default_instance_;
class SetMacInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetMacInfo>
      _instance;
} _SetMacInfo_default_instance_;
class SetFileInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetFileInfo>
      _instance;
} _SetFileInfo_default_instance_;
class ProcReportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcReport>
      _instance;
} _ProcReport_default_instance_;
class SetQuotaReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetQuotaReq>
      _instance;
} _SetQuotaReq_default_instance_;
class ProcQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcQ>
      _instance;
} _ProcQ_default_instance_;
class SetQuotaRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetQuotaRsp>
      _instance;
} _SetQuotaRsp_default_instance_;
class RealReportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RealReport>
      _instance;
} _RealReport_default_instance_;
class QReportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QReport>
      _instance;
} _QReport_default_instance_;
}  // namespace open_app_desc
namespace protobuf_open_5fapp_5fdesc_2eproto {
void InitDefaultsCmdBaseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::open_app_desc::_CmdBase_default_instance_;
    new (ptr) ::open_app_desc::CmdBase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::open_app_desc::CmdBase::InitAsDefaultInstance();
}

void InitDefaultsCmdBase() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCmdBaseImpl);
}

void InitDefaultsCmdBaseRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::open_app_desc::_CmdBaseResp_default_instance_;
    new (ptr) ::open_app_desc::CmdBaseResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::open_app_desc::CmdBaseResp::InitAsDefaultInstance();
}

void InitDefaultsCmdBaseResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCmdBaseRespImpl);
}

void InitDefaultsL5cfgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::open_app_desc::_L5cfg_default_instance_;
    new (ptr) ::open_app_desc::L5cfg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::open_app_desc::L5cfg::InitAsDefaultInstance();
}

void InitDefaultsL5cfg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsL5cfgImpl);
}

void InitDefaultsFluxImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsL5cfg();
  {
    void* ptr = &::open_app_desc::_Flux_default_instance_;
    new (ptr) ::open_app_desc::Flux();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::open_app_desc::Flux::InitAsDefaultInstance();
}

void InitDefaultsFlux() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFluxImpl);
}

void InitDefaultsReportItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::open_app_desc::_ReportItem_default_instance_;
    new (ptr) ::open_app_desc::ReportItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::open_app_desc::ReportItem::InitAsDefaultInstance();
}

void InitDefaultsReportItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReportItemImpl);
}

void InitDefaultsQuotaReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsReportItem();
  {
    void* ptr = &::open_app_desc::_QuotaReq_default_instance_;
    new (ptr) ::open_app_desc::QuotaReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::open_app_desc::QuotaReq::InitAsDefaultInstance();
}

void InitDefaultsQuotaReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQuotaReqImpl);
}

void InitDefaultsQuotaRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::open_app_desc::_QuotaRsp_default_instance_;
    new (ptr) ::open_app_desc::QuotaRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::open_app_desc::QuotaRsp::InitAsDefaultInstance();
}

void InitDefaultsQuotaRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQuotaRspImpl);
}

void InitDefaultsSetItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::open_app_desc::_SetItem_default_instance_;
    new (ptr) ::open_app_desc::SetItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::open_app_desc::SetItem::InitAsDefaultInstance();
}

void InitDefaultsSetItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetItemImpl);
}

void InitDefaultsSetMacInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsSetItem();
  {
    void* ptr = &::open_app_desc::_SetMacInfo_default_instance_;
    new (ptr) ::open_app_desc::SetMacInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::open_app_desc::SetMacInfo::InitAsDefaultInstance();
}

void InitDefaultsSetMacInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetMacInfoImpl);
}

void InitDefaultsSetFileInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::open_app_desc::_SetFileInfo_default_instance_;
    new (ptr) ::open_app_desc::SetFileInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::open_app_desc::SetFileInfo::InitAsDefaultInstance();
}

void InitDefaultsSetFileInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetFileInfoImpl);
}

void InitDefaultsProcReportImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsReportItem();
  {
    void* ptr = &::open_app_desc::_ProcReport_default_instance_;
    new (ptr) ::open_app_desc::ProcReport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::open_app_desc::ProcReport::InitAsDefaultInstance();
}

void InitDefaultsProcReport() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProcReportImpl);
}

void InitDefaultsSetQuotaReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsReportItem();
  protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsProcReport();
  {
    void* ptr = &::open_app_desc::_SetQuotaReq_default_instance_;
    new (ptr) ::open_app_desc::SetQuotaReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::open_app_desc::SetQuotaReq::InitAsDefaultInstance();
}

void InitDefaultsSetQuotaReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetQuotaReqImpl);
}

void InitDefaultsProcQImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::open_app_desc::_ProcQ_default_instance_;
    new (ptr) ::open_app_desc::ProcQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::open_app_desc::ProcQ::InitAsDefaultInstance();
}

void InitDefaultsProcQ() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProcQImpl);
}

void InitDefaultsSetQuotaRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsProcQ();
  {
    void* ptr = &::open_app_desc::_SetQuotaRsp_default_instance_;
    new (ptr) ::open_app_desc::SetQuotaRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::open_app_desc::SetQuotaRsp::InitAsDefaultInstance();
}

void InitDefaultsSetQuotaRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetQuotaRspImpl);
}

void InitDefaultsRealReportImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::open_app_desc::_RealReport_default_instance_;
    new (ptr) ::open_app_desc::RealReport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::open_app_desc::RealReport::InitAsDefaultInstance();
}

void InitDefaultsRealReport() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRealReportImpl);
}

void InitDefaultsQReportImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::open_app_desc::_QReport_default_instance_;
    new (ptr) ::open_app_desc::QReport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::open_app_desc::QReport::InitAsDefaultInstance();
}

void InitDefaultsQReport() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQReportImpl);
}

::google::protobuf::Metadata file_level_metadata[16];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::CmdBase, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::CmdBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::CmdBase, seq_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::CmdBase, cmd_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::CmdBase, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::CmdBase, body_),
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::CmdBaseResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::CmdBaseResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::CmdBaseResp, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::CmdBaseResp, err_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::CmdBaseResp, resp_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::L5cfg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::L5cfg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::L5cfg, modid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::L5cfg, cmdid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::L5cfg, defaultip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::L5cfg, defaultport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::L5cfg, globaldefaultip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::L5cfg, globaldefaultport_),
  0,
  1,
  2,
  4,
  3,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, flowswitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, queryrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, attendrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, queryid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, attendid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, totalflowid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, queryquota_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, attendquota_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, referkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, winlen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, errnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, errnumrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, cpurate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, cpuinterval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, memrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, queryquovaryid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, attendquovaryid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, normalenv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, testenv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::Flux, type_),
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  0,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  1,
  2,
  19,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::ReportItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::ReportItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::ReportItem, timekey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::ReportItem, reportnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::ReportItem, refuse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::ReportItem, setrefuse_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaReq, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaReq, referkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaReq, reportitem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaReq, localquota_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaReq, serial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaReq, totalquota_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaReq, openid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaReq, uin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaReq, nowsum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaReq, workernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaReq, setkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaReq, business_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaReq, setenv_),
  0,
  1,
  ~0u,
  7,
  8,
  2,
  12,
  3,
  9,
  10,
  11,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaRsp, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaRsp, localq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaRsp, totalq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaRsp, partnernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaRsp, serial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaRsp, ipnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaRsp, alloctype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaRsp, allocpartnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaRsp, alloctime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaRsp, self_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaRsp, total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaRsp, nowsum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaRsp, totalworkernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaRsp, setquota_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaRsp, setsum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QuotaRsp, procquota_),
  0,
  2,
  3,
  4,
  1,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetItem, setkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetItem, setquota_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetItem, iplist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetItem, feaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetItem, refuseid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetItem, setrefuseid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetItem, realid_),
  0,
  1,
  ~0u,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetMacInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetMacInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetMacInfo, itemlist_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetFileInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetFileInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetFileInfo, fpath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetFileInfo, fname_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::ProcReport, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::ProcReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::ProcReport, procid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::ProcReport, proclist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::ProcReport, setkey_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetQuotaReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetQuotaReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetQuotaReq, setkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetQuotaReq, itemlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetQuotaReq, workernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetQuotaReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetQuotaReq, procitem_),
  0,
  ~0u,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::ProcQ, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::ProcQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::ProcQ, procid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::ProcQ, procquota_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetQuotaRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetQuotaRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetQuotaRsp, setkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetQuotaRsp, setsum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::SetQuotaRsp, procq_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::RealReport, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::RealReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::RealReport, keytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::RealReport, keyname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::RealReport, timekey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::RealReport, setname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::RealReport, total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::RealReport, refuse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::RealReport, setrefuse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::RealReport, real_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::RealReport, quota_),
  3,
  0,
  2,
  1,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QReport, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QReport, actid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QReport, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QReport, procid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QReport, timekey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QReport, setname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QReport, actquota_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QReport, setquota_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QReport, total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QReport, refuse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QReport, setrefuse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::open_app_desc::QReport, real_),
  0,
  1,
  4,
  3,
  2,
  5,
  6,
  7,
  8,
  9,
  10,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::open_app_desc::CmdBase)},
  { 13, 21, sizeof(::open_app_desc::CmdBaseResp)},
  { 24, 35, sizeof(::open_app_desc::L5cfg)},
  { 41, 66, sizeof(::open_app_desc::Flux)},
  { 86, 95, sizeof(::open_app_desc::ReportItem)},
  { 99, 118, sizeof(::open_app_desc::QuotaReq)},
  { 132, 153, sizeof(::open_app_desc::QuotaRsp)},
  { 169, 181, sizeof(::open_app_desc::SetItem)},
  { 188, 194, sizeof(::open_app_desc::SetMacInfo)},
  { 195, 202, sizeof(::open_app_desc::SetFileInfo)},
  { 204, 212, sizeof(::open_app_desc::ProcReport)},
  { 215, 225, sizeof(::open_app_desc::SetQuotaReq)},
  { 230, 237, sizeof(::open_app_desc::ProcQ)},
  { 239, 247, sizeof(::open_app_desc::SetQuotaRsp)},
  { 250, 264, sizeof(::open_app_desc::RealReport)},
  { 273, 289, sizeof(::open_app_desc::QReport)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::open_app_desc::_CmdBase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::open_app_desc::_CmdBaseResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::open_app_desc::_L5cfg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::open_app_desc::_Flux_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::open_app_desc::_ReportItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::open_app_desc::_QuotaReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::open_app_desc::_QuotaRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::open_app_desc::_SetItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::open_app_desc::_SetMacInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::open_app_desc::_SetFileInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::open_app_desc::_ProcReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::open_app_desc::_SetQuotaReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::open_app_desc::_ProcQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::open_app_desc::_SetQuotaRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::open_app_desc::_RealReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::open_app_desc::_QReport_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "open_app_desc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023open_app_desc.proto\022\ropen_app_desc\"E\n\007"
      "CmdBase\022\016\n\006seq_id\030\001 \001(\003\022\016\n\006cmd_id\030\002 \001(\003\022"
      "\014\n\004type\030\003 \001(\003\022\014\n\004body\030\004 \001(\014\"9\n\013CmdBaseRe"
      "sp\022\013\n\003ret\030\001 \001(\003\022\017\n\007err_msg\030\002 \001(\014\022\014\n\004resp"
      "\030\003 \001(\014\"\201\001\n\005L5cfg\022\r\n\005modId\030\001 \001(\014\022\r\n\005cmdId"
      "\030\002 \001(\014\022\021\n\tdefaultIp\030\003 \001(\014\022\023\n\013defaultPort"
      "\030\004 \001(\003\022\027\n\017globalDefaultIp\030\005 \001(\014\022\031\n\021globa"
      "lDefaultPort\030\006 \001(\003\"\256\003\n\004Flux\022\022\n\nflowswitc"
      "h\030\001 \001(\r\022\021\n\tqueryrate\030\002 \001(\r\022\022\n\nattendrate"
      "\030\003 \001(\r\022\017\n\007queryid\030\004 \001(\r\022\020\n\010attendid\030\005 \001("
      "\r\022\023\n\013totalflowid\030\006 \001(\r\022\022\n\nqueryquota\030\007 \001"
      "(\r\022\023\n\013attendquota\030\010 \001(\r\022\020\n\010referkey\030\t \001("
      "\014\022\016\n\006winlen\030\n \001(\r\022\016\n\006errnum\030\013 \001(\r\022\022\n\nerr"
      "numrate\030\014 \001(\r\022\017\n\007cpurate\030\r \001(\r\022\023\n\013cpuint"
      "erval\030\016 \001(\r\022\017\n\007memrate\030\017 \001(\r\022\026\n\016queryquo"
      "varyid\030\020 \001(\r\022\027\n\017attendquovaryid\030\021 \001(\r\022\'\n"
      "\tnormalenv\030\022 \001(\0132\024.open_app_desc.L5cfg\022%"
      "\n\007testenv\030\023 \001(\0132\024.open_app_desc.L5cfg\022\014\n"
      "\004type\030\024 \001(\r\"S\n\nReportItem\022\017\n\007timekey\030\001 \001"
      "(\003\022\021\n\treportnum\030\002 \001(\003\022\016\n\006refuse\030\003 \001(\003\022\021\n"
      "\tsetrefuse\030\004 \001(\003\"\216\002\n\010QuotaReq\022\013\n\003key\030\001 \001"
      "(\014\022\020\n\010referkey\030\002 \001(\014\022-\n\nreportitem\030\003 \003(\013"
      "2\031.open_app_desc.ReportItem\022\022\n\nlocalquot"
      "a\030\004 \001(\005\022\n\n\002id\030\005 \001(\005\022\016\n\006serial\030\006 \001(\014\022\022\n\nt"
      "otalquota\030\007 \001(\005\022\016\n\006openid\030\010 \001(\014\022\013\n\003uin\030\t"
      " \001(\003\022\016\n\006nowsum\030\n \001(\003\022\021\n\tworkernum\030\013 \001(\003\022"
      "\016\n\006setkey\030\014 \001(\014\022\020\n\010business\030\r \001(\014\022\016\n\006set"
      "env\030\016 \001(\014\"\240\002\n\010QuotaRsp\022\013\n\003key\030\001 \001(\014\022\016\n\006l"
      "ocalq\030\002 \001(\003\022\016\n\006totalq\030\003 \001(\003\022\022\n\npartnernu"
      "m\030\004 \001(\005\022\016\n\006serial\030\005 \001(\014\022\r\n\005ipnum\030\006 \001(\005\022\021"
      "\n\talloctype\030\007 \001(\005\022\024\n\014allocpartnum\030\010 \001(\005\022"
      "\021\n\talloctime\030\t \001(\003\022\014\n\004self\030\n \001(\003\022\r\n\005tota"
      "l\030\013 \001(\003\022\016\n\006nowsum\030\014 \001(\003\022\026\n\016totalworkernu"
      "m\030\r \001(\003\022\020\n\010setquota\030\016 \001(\005\022\016\n\006setsum\030\017 \001("
      "\005\022\021\n\tprocquota\030\020 \001(\005\"\201\001\n\007SetItem\022\016\n\006setk"
      "ey\030\001 \001(\014\022\020\n\010setquota\030\002 \001(\005\022\016\n\006iplist\030\003 \003"
      "(\014\022\r\n\005feaid\030\004 \001(\005\022\020\n\010refuseid\030\005 \001(\005\022\023\n\013s"
      "etrefuseid\030\006 \001(\005\022\016\n\006realid\030\007 \001(\005\"6\n\nSetM"
      "acInfo\022(\n\010itemlist\030\001 \003(\0132\026.open_app_desc"
      ".SetItem\"+\n\013SetFileInfo\022\r\n\005fpath\030\001 \001(\014\022\r"
      "\n\005fname\030\002 \003(\014\"Y\n\nProcReport\022\016\n\006procid\030\001 "
      "\001(\014\022+\n\010proclist\030\002 \003(\0132\031.open_app_desc.Re"
      "portItem\022\016\n\006setkey\030\003 \001(\014\"\226\001\n\013SetQuotaReq"
      "\022\016\n\006setkey\030\001 \001(\014\022+\n\010itemlist\030\002 \003(\0132\031.ope"
      "n_app_desc.ReportItem\022\021\n\tworkernum\030\003 \001(\005"
      "\022\n\n\002id\030\004 \001(\005\022+\n\010procitem\030\005 \003(\0132\031.open_ap"
      "p_desc.ProcReport\"*\n\005ProcQ\022\016\n\006procid\030\001 \001"
      "(\014\022\021\n\tprocquota\030\002 \001(\005\"R\n\013SetQuotaRsp\022\016\n\006"
      "setkey\030\001 \001(\014\022\016\n\006setsum\030\002 \001(\005\022#\n\005procq\030\003 "
      "\003(\0132\024.open_app_desc.ProcQ\"\237\001\n\nRealReport"
      "\022\017\n\007keytype\030\001 \001(\005\022\017\n\007keyname\030\002 \001(\014\022\017\n\007ti"
      "mekey\030\003 \001(\003\022\017\n\007setname\030\004 \001(\014\022\r\n\005total\030\005 "
      "\001(\005\022\016\n\006refuse\030\006 \001(\005\022\021\n\tsetrefuse\030\007 \001(\005\022\014"
      "\n\004real\030\010 \001(\005\022\r\n\005quota\030\t \001(\005\"\272\001\n\007QReport\022"
      "\r\n\005actid\030\001 \001(\014\022\n\n\002ip\030\002 \001(\014\022\016\n\006procid\030\003 \001"
      "(\005\022\017\n\007timekey\030\004 \001(\003\022\017\n\007setname\030\005 \001(\014\022\020\n\010"
      "actquota\030\006 \001(\005\022\020\n\010setquota\030\007 \001(\005\022\r\n\005tota"
      "l\030\010 \001(\005\022\016\n\006refuse\030\t \001(\005\022\021\n\tsetrefuse\030\n \001"
      "(\005\022\014\n\004real\030\013 \001(\005*0\n\tBODY_TYPE\022\020\n\014BODY_RE"
      "QUEST\020\001\022\021\n\rBODY_RESPONSE\020\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2386);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "open_app_desc.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_open_5fapp_5fdesc_2eproto
namespace open_app_desc {
const ::google::protobuf::EnumDescriptor* BODY_TYPE_descriptor() {
  protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_open_5fapp_5fdesc_2eproto::file_level_enum_descriptors[0];
}
bool BODY_TYPE_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CmdBase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdBase::kSeqIdFieldNumber;
const int CmdBase::kCmdIdFieldNumber;
const int CmdBase::kTypeFieldNumber;
const int CmdBase::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdBase::CmdBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsCmdBase();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:open_app_desc.CmdBase)
}
CmdBase::CmdBase(const CmdBase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_body()) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  ::memcpy(&seq_id_, &from.seq_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&seq_id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:open_app_desc.CmdBase)
}

void CmdBase::SharedCtor() {
  _cached_size_ = 0;
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&seq_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&seq_id_)) + sizeof(type_));
}

CmdBase::~CmdBase() {
  // @@protoc_insertion_point(destructor:open_app_desc.CmdBase)
  SharedDtor();
}

void CmdBase::SharedDtor() {
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CmdBase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CmdBase::descriptor() {
  ::protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdBase& CmdBase::default_instance() {
  ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsCmdBase();
  return *internal_default_instance();
}

CmdBase* CmdBase::New(::google::protobuf::Arena* arena) const {
  CmdBase* n = new CmdBase;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CmdBase::Clear() {
// @@protoc_insertion_point(message_clear_start:open_app_desc.CmdBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!body_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*body_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&seq_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&seq_id_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CmdBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:open_app_desc.CmdBase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 seq_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_seq_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seq_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 cmd_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cmd_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cmd_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes body = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:open_app_desc.CmdBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:open_app_desc.CmdBase)
  return false;
#undef DO_
}

void CmdBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:open_app_desc.CmdBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 seq_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->seq_id(), output);
  }

  // optional int64 cmd_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->cmd_id(), output);
  }

  // optional int64 type = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->type(), output);
  }

  // optional bytes body = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->body(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:open_app_desc.CmdBase)
}

::google::protobuf::uint8* CmdBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:open_app_desc.CmdBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 seq_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->seq_id(), target);
  }

  // optional int64 cmd_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->cmd_id(), target);
  }

  // optional int64 type = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->type(), target);
  }

  // optional bytes body = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->body(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:open_app_desc.CmdBase)
  return target;
}

size_t CmdBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:open_app_desc.CmdBase)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes body = 4;
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->body());
    }

    // optional int64 seq_id = 1;
    if (has_seq_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->seq_id());
    }

    // optional int64 cmd_id = 2;
    if (has_cmd_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->cmd_id());
    }

    // optional int64 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CmdBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:open_app_desc.CmdBase)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdBase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:open_app_desc.CmdBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:open_app_desc.CmdBase)
    MergeFrom(*source);
  }
}

void CmdBase::MergeFrom(const CmdBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:open_app_desc.CmdBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_body();
      body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
    }
    if (cached_has_bits & 0x00000002u) {
      seq_id_ = from.seq_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      cmd_id_ = from.cmd_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CmdBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:open_app_desc.CmdBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdBase::CopyFrom(const CmdBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:open_app_desc.CmdBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdBase::IsInitialized() const {
  return true;
}

void CmdBase::Swap(CmdBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdBase::InternalSwap(CmdBase* other) {
  using std::swap;
  body_.Swap(&other->body_);
  swap(seq_id_, other->seq_id_);
  swap(cmd_id_, other->cmd_id_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CmdBase::GetMetadata() const {
  protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CmdBaseResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CmdBaseResp::kRetFieldNumber;
const int CmdBaseResp::kErrMsgFieldNumber;
const int CmdBaseResp::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CmdBaseResp::CmdBaseResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsCmdBaseResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:open_app_desc.CmdBaseResp)
}
CmdBaseResp::CmdBaseResp(const CmdBaseResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_err_msg()) {
    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  resp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_resp()) {
    resp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resp_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:open_app_desc.CmdBaseResp)
}

void CmdBaseResp::SharedCtor() {
  _cached_size_ = 0;
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = GOOGLE_LONGLONG(0);
}

CmdBaseResp::~CmdBaseResp() {
  // @@protoc_insertion_point(destructor:open_app_desc.CmdBaseResp)
  SharedDtor();
}

void CmdBaseResp::SharedDtor() {
  err_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CmdBaseResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CmdBaseResp::descriptor() {
  ::protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CmdBaseResp& CmdBaseResp::default_instance() {
  ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsCmdBaseResp();
  return *internal_default_instance();
}

CmdBaseResp* CmdBaseResp::New(::google::protobuf::Arena* arena) const {
  CmdBaseResp* n = new CmdBaseResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CmdBaseResp::Clear() {
// @@protoc_insertion_point(message_clear_start:open_app_desc.CmdBaseResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!err_msg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*err_msg_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!resp_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*resp_.UnsafeRawStringPointer())->clear();
    }
  }
  ret_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CmdBaseResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:open_app_desc.CmdBaseResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes err_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_err_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes resp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:open_app_desc.CmdBaseResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:open_app_desc.CmdBaseResp)
  return false;
#undef DO_
}

void CmdBaseResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:open_app_desc.CmdBaseResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 ret = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ret(), output);
  }

  // optional bytes err_msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->err_msg(), output);
  }

  // optional bytes resp = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:open_app_desc.CmdBaseResp)
}

::google::protobuf::uint8* CmdBaseResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:open_app_desc.CmdBaseResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 ret = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ret(), target);
  }

  // optional bytes err_msg = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->err_msg(), target);
  }

  // optional bytes resp = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->resp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:open_app_desc.CmdBaseResp)
  return target;
}

size_t CmdBaseResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:open_app_desc.CmdBaseResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes err_msg = 2;
    if (has_err_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->err_msg());
    }

    // optional bytes resp = 3;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->resp());
    }

    // optional int64 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ret());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CmdBaseResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:open_app_desc.CmdBaseResp)
  GOOGLE_DCHECK_NE(&from, this);
  const CmdBaseResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CmdBaseResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:open_app_desc.CmdBaseResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:open_app_desc.CmdBaseResp)
    MergeFrom(*source);
  }
}

void CmdBaseResp::MergeFrom(const CmdBaseResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:open_app_desc.CmdBaseResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_err_msg();
      err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_resp();
      resp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resp_);
    }
    if (cached_has_bits & 0x00000004u) {
      ret_ = from.ret_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CmdBaseResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:open_app_desc.CmdBaseResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CmdBaseResp::CopyFrom(const CmdBaseResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:open_app_desc.CmdBaseResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CmdBaseResp::IsInitialized() const {
  return true;
}

void CmdBaseResp::Swap(CmdBaseResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CmdBaseResp::InternalSwap(CmdBaseResp* other) {
  using std::swap;
  err_msg_.Swap(&other->err_msg_);
  resp_.Swap(&other->resp_);
  swap(ret_, other->ret_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CmdBaseResp::GetMetadata() const {
  protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void L5cfg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int L5cfg::kModIdFieldNumber;
const int L5cfg::kCmdIdFieldNumber;
const int L5cfg::kDefaultIpFieldNumber;
const int L5cfg::kDefaultPortFieldNumber;
const int L5cfg::kGlobalDefaultIpFieldNumber;
const int L5cfg::kGlobalDefaultPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

L5cfg::L5cfg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsL5cfg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:open_app_desc.L5cfg)
}
L5cfg::L5cfg(const L5cfg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  modid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_modid()) {
    modid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modid_);
  }
  cmdid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cmdid()) {
    cmdid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmdid_);
  }
  defaultip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_defaultip()) {
    defaultip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.defaultip_);
  }
  globaldefaultip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_globaldefaultip()) {
    globaldefaultip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.globaldefaultip_);
  }
  ::memcpy(&defaultport_, &from.defaultport_,
    static_cast<size_t>(reinterpret_cast<char*>(&globaldefaultport_) -
    reinterpret_cast<char*>(&defaultport_)) + sizeof(globaldefaultport_));
  // @@protoc_insertion_point(copy_constructor:open_app_desc.L5cfg)
}

void L5cfg::SharedCtor() {
  _cached_size_ = 0;
  modid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmdid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  defaultip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  globaldefaultip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&defaultport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&globaldefaultport_) -
      reinterpret_cast<char*>(&defaultport_)) + sizeof(globaldefaultport_));
}

L5cfg::~L5cfg() {
  // @@protoc_insertion_point(destructor:open_app_desc.L5cfg)
  SharedDtor();
}

void L5cfg::SharedDtor() {
  modid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmdid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  defaultip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  globaldefaultip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void L5cfg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* L5cfg::descriptor() {
  ::protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const L5cfg& L5cfg::default_instance() {
  ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsL5cfg();
  return *internal_default_instance();
}

L5cfg* L5cfg::New(::google::protobuf::Arena* arena) const {
  L5cfg* n = new L5cfg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void L5cfg::Clear() {
// @@protoc_insertion_point(message_clear_start:open_app_desc.L5cfg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!modid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*modid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!cmdid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*cmdid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!defaultip_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*defaultip_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!globaldefaultip_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*globaldefaultip_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 48u) {
    ::memset(&defaultport_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&globaldefaultport_) -
        reinterpret_cast<char*>(&defaultport_)) + sizeof(globaldefaultport_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool L5cfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:open_app_desc.L5cfg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes modId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_modid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes cmdId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_cmdid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes defaultIp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_defaultip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 defaultPort = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_defaultport();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &defaultport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes globalDefaultIp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_globaldefaultip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 globalDefaultPort = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_globaldefaultport();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &globaldefaultport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:open_app_desc.L5cfg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:open_app_desc.L5cfg)
  return false;
#undef DO_
}

void L5cfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:open_app_desc.L5cfg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes modId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->modid(), output);
  }

  // optional bytes cmdId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->cmdid(), output);
  }

  // optional bytes defaultIp = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->defaultip(), output);
  }

  // optional int64 defaultPort = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->defaultport(), output);
  }

  // optional bytes globalDefaultIp = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->globaldefaultip(), output);
  }

  // optional int64 globalDefaultPort = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->globaldefaultport(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:open_app_desc.L5cfg)
}

::google::protobuf::uint8* L5cfg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:open_app_desc.L5cfg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes modId = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->modid(), target);
  }

  // optional bytes cmdId = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->cmdid(), target);
  }

  // optional bytes defaultIp = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->defaultip(), target);
  }

  // optional int64 defaultPort = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->defaultport(), target);
  }

  // optional bytes globalDefaultIp = 5;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->globaldefaultip(), target);
  }

  // optional int64 globalDefaultPort = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->globaldefaultport(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:open_app_desc.L5cfg)
  return target;
}

size_t L5cfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:open_app_desc.L5cfg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes modId = 1;
    if (has_modid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->modid());
    }

    // optional bytes cmdId = 2;
    if (has_cmdid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->cmdid());
    }

    // optional bytes defaultIp = 3;
    if (has_defaultip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->defaultip());
    }

    // optional bytes globalDefaultIp = 5;
    if (has_globaldefaultip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->globaldefaultip());
    }

    // optional int64 defaultPort = 4;
    if (has_defaultport()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->defaultport());
    }

    // optional int64 globalDefaultPort = 6;
    if (has_globaldefaultport()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->globaldefaultport());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void L5cfg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:open_app_desc.L5cfg)
  GOOGLE_DCHECK_NE(&from, this);
  const L5cfg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const L5cfg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:open_app_desc.L5cfg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:open_app_desc.L5cfg)
    MergeFrom(*source);
  }
}

void L5cfg::MergeFrom(const L5cfg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:open_app_desc.L5cfg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_modid();
      modid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_cmdid();
      cmdid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmdid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_defaultip();
      defaultip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.defaultip_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_globaldefaultip();
      globaldefaultip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.globaldefaultip_);
    }
    if (cached_has_bits & 0x00000010u) {
      defaultport_ = from.defaultport_;
    }
    if (cached_has_bits & 0x00000020u) {
      globaldefaultport_ = from.globaldefaultport_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void L5cfg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:open_app_desc.L5cfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void L5cfg::CopyFrom(const L5cfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:open_app_desc.L5cfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool L5cfg::IsInitialized() const {
  return true;
}

void L5cfg::Swap(L5cfg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void L5cfg::InternalSwap(L5cfg* other) {
  using std::swap;
  modid_.Swap(&other->modid_);
  cmdid_.Swap(&other->cmdid_);
  defaultip_.Swap(&other->defaultip_);
  globaldefaultip_.Swap(&other->globaldefaultip_);
  swap(defaultport_, other->defaultport_);
  swap(globaldefaultport_, other->globaldefaultport_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata L5cfg::GetMetadata() const {
  protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Flux::InitAsDefaultInstance() {
  ::open_app_desc::_Flux_default_instance_._instance.get_mutable()->normalenv_ = const_cast< ::open_app_desc::L5cfg*>(
      ::open_app_desc::L5cfg::internal_default_instance());
  ::open_app_desc::_Flux_default_instance_._instance.get_mutable()->testenv_ = const_cast< ::open_app_desc::L5cfg*>(
      ::open_app_desc::L5cfg::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Flux::kFlowswitchFieldNumber;
const int Flux::kQueryrateFieldNumber;
const int Flux::kAttendrateFieldNumber;
const int Flux::kQueryidFieldNumber;
const int Flux::kAttendidFieldNumber;
const int Flux::kTotalflowidFieldNumber;
const int Flux::kQueryquotaFieldNumber;
const int Flux::kAttendquotaFieldNumber;
const int Flux::kReferkeyFieldNumber;
const int Flux::kWinlenFieldNumber;
const int Flux::kErrnumFieldNumber;
const int Flux::kErrnumrateFieldNumber;
const int Flux::kCpurateFieldNumber;
const int Flux::kCpuintervalFieldNumber;
const int Flux::kMemrateFieldNumber;
const int Flux::kQueryquovaryidFieldNumber;
const int Flux::kAttendquovaryidFieldNumber;
const int Flux::kNormalenvFieldNumber;
const int Flux::kTestenvFieldNumber;
const int Flux::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Flux::Flux()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsFlux();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:open_app_desc.Flux)
}
Flux::Flux(const Flux& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  referkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_referkey()) {
    referkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referkey_);
  }
  if (from.has_normalenv()) {
    normalenv_ = new ::open_app_desc::L5cfg(*from.normalenv_);
  } else {
    normalenv_ = NULL;
  }
  if (from.has_testenv()) {
    testenv_ = new ::open_app_desc::L5cfg(*from.testenv_);
  } else {
    testenv_ = NULL;
  }
  ::memcpy(&flowswitch_, &from.flowswitch_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&flowswitch_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:open_app_desc.Flux)
}

void Flux::SharedCtor() {
  _cached_size_ = 0;
  referkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&normalenv_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&normalenv_)) + sizeof(type_));
}

Flux::~Flux() {
  // @@protoc_insertion_point(destructor:open_app_desc.Flux)
  SharedDtor();
}

void Flux::SharedDtor() {
  referkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete normalenv_;
  if (this != internal_default_instance()) delete testenv_;
}

void Flux::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Flux::descriptor() {
  ::protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Flux& Flux::default_instance() {
  ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsFlux();
  return *internal_default_instance();
}

Flux* Flux::New(::google::protobuf::Arena* arena) const {
  Flux* n = new Flux;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Flux::Clear() {
// @@protoc_insertion_point(message_clear_start:open_app_desc.Flux)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!referkey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*referkey_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(normalenv_ != NULL);
      normalenv_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(testenv_ != NULL);
      testenv_->Clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&flowswitch_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&attendid_) -
        reinterpret_cast<char*>(&flowswitch_)) + sizeof(attendid_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&totalflowid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cpuinterval_) -
        reinterpret_cast<char*>(&totalflowid_)) + sizeof(cpuinterval_));
  }
  if (cached_has_bits & 983040u) {
    ::memset(&memrate_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&memrate_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Flux::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:open_app_desc.Flux)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 flowswitch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_flowswitch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flowswitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 queryrate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_queryrate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &queryrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 attendrate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_attendrate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attendrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 queryid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_queryid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &queryid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 attendid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_attendid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attendid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 totalflowid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_totalflowid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totalflowid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 queryquota = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_queryquota();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &queryquota_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 attendquota = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_attendquota();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attendquota_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes referkey = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_referkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 winlen = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_winlen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &winlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 errnum = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_errnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 errnumrate = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_errnumrate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errnumrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cpurate = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_cpurate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cpurate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cpuinterval = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_cpuinterval();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cpuinterval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 memrate = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_memrate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &memrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 queryquovaryid = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_queryquovaryid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &queryquovaryid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 attendquovaryid = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_attendquovaryid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attendquovaryid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .open_app_desc.L5cfg normalenv = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_normalenv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .open_app_desc.L5cfg testenv = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_testenv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 type = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:open_app_desc.Flux)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:open_app_desc.Flux)
  return false;
#undef DO_
}

void Flux::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:open_app_desc.Flux)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 flowswitch = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->flowswitch(), output);
  }

  // optional uint32 queryrate = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->queryrate(), output);
  }

  // optional uint32 attendrate = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->attendrate(), output);
  }

  // optional uint32 queryid = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->queryid(), output);
  }

  // optional uint32 attendid = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->attendid(), output);
  }

  // optional uint32 totalflowid = 6;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->totalflowid(), output);
  }

  // optional uint32 queryquota = 7;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->queryquota(), output);
  }

  // optional uint32 attendquota = 8;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->attendquota(), output);
  }

  // optional bytes referkey = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->referkey(), output);
  }

  // optional uint32 winlen = 10;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->winlen(), output);
  }

  // optional uint32 errnum = 11;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->errnum(), output);
  }

  // optional uint32 errnumrate = 12;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->errnumrate(), output);
  }

  // optional uint32 cpurate = 13;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->cpurate(), output);
  }

  // optional uint32 cpuinterval = 14;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->cpuinterval(), output);
  }

  // optional uint32 memrate = 15;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->memrate(), output);
  }

  // optional uint32 queryquovaryid = 16;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->queryquovaryid(), output);
  }

  // optional uint32 attendquovaryid = 17;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->attendquovaryid(), output);
  }

  // optional .open_app_desc.L5cfg normalenv = 18;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->normalenv_, output);
  }

  // optional .open_app_desc.L5cfg testenv = 19;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *this->testenv_, output);
  }

  // optional uint32 type = 20;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:open_app_desc.Flux)
}

::google::protobuf::uint8* Flux::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:open_app_desc.Flux)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 flowswitch = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->flowswitch(), target);
  }

  // optional uint32 queryrate = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->queryrate(), target);
  }

  // optional uint32 attendrate = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->attendrate(), target);
  }

  // optional uint32 queryid = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->queryid(), target);
  }

  // optional uint32 attendid = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->attendid(), target);
  }

  // optional uint32 totalflowid = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->totalflowid(), target);
  }

  // optional uint32 queryquota = 7;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->queryquota(), target);
  }

  // optional uint32 attendquota = 8;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->attendquota(), target);
  }

  // optional bytes referkey = 9;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->referkey(), target);
  }

  // optional uint32 winlen = 10;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->winlen(), target);
  }

  // optional uint32 errnum = 11;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->errnum(), target);
  }

  // optional uint32 errnumrate = 12;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->errnumrate(), target);
  }

  // optional uint32 cpurate = 13;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->cpurate(), target);
  }

  // optional uint32 cpuinterval = 14;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->cpuinterval(), target);
  }

  // optional uint32 memrate = 15;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->memrate(), target);
  }

  // optional uint32 queryquovaryid = 16;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->queryquovaryid(), target);
  }

  // optional uint32 attendquovaryid = 17;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->attendquovaryid(), target);
  }

  // optional .open_app_desc.L5cfg normalenv = 18;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, *this->normalenv_, deterministic, target);
  }

  // optional .open_app_desc.L5cfg testenv = 19;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, *this->testenv_, deterministic, target);
  }

  // optional uint32 type = 20;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:open_app_desc.Flux)
  return target;
}

size_t Flux::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:open_app_desc.Flux)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes referkey = 9;
    if (has_referkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->referkey());
    }

    // optional .open_app_desc.L5cfg normalenv = 18;
    if (has_normalenv()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->normalenv_);
    }

    // optional .open_app_desc.L5cfg testenv = 19;
    if (has_testenv()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->testenv_);
    }

    // optional uint32 flowswitch = 1;
    if (has_flowswitch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flowswitch());
    }

    // optional uint32 queryrate = 2;
    if (has_queryrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->queryrate());
    }

    // optional uint32 attendrate = 3;
    if (has_attendrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attendrate());
    }

    // optional uint32 queryid = 4;
    if (has_queryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->queryid());
    }

    // optional uint32 attendid = 5;
    if (has_attendid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attendid());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional uint32 totalflowid = 6;
    if (has_totalflowid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->totalflowid());
    }

    // optional uint32 queryquota = 7;
    if (has_queryquota()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->queryquota());
    }

    // optional uint32 attendquota = 8;
    if (has_attendquota()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attendquota());
    }

    // optional uint32 winlen = 10;
    if (has_winlen()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->winlen());
    }

    // optional uint32 errnum = 11;
    if (has_errnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->errnum());
    }

    // optional uint32 errnumrate = 12;
    if (has_errnumrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->errnumrate());
    }

    // optional uint32 cpurate = 13;
    if (has_cpurate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cpurate());
    }

    // optional uint32 cpuinterval = 14;
    if (has_cpuinterval()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cpuinterval());
    }

  }
  if (_has_bits_[16 / 32] & 983040u) {
    // optional uint32 memrate = 15;
    if (has_memrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->memrate());
    }

    // optional uint32 queryquovaryid = 16;
    if (has_queryquovaryid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->queryquovaryid());
    }

    // optional uint32 attendquovaryid = 17;
    if (has_attendquovaryid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attendquovaryid());
    }

    // optional uint32 type = 20;
    if (has_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Flux::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:open_app_desc.Flux)
  GOOGLE_DCHECK_NE(&from, this);
  const Flux* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Flux>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:open_app_desc.Flux)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:open_app_desc.Flux)
    MergeFrom(*source);
  }
}

void Flux::MergeFrom(const Flux& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:open_app_desc.Flux)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_referkey();
      referkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referkey_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_normalenv()->::open_app_desc::L5cfg::MergeFrom(from.normalenv());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_testenv()->::open_app_desc::L5cfg::MergeFrom(from.testenv());
    }
    if (cached_has_bits & 0x00000008u) {
      flowswitch_ = from.flowswitch_;
    }
    if (cached_has_bits & 0x00000010u) {
      queryrate_ = from.queryrate_;
    }
    if (cached_has_bits & 0x00000020u) {
      attendrate_ = from.attendrate_;
    }
    if (cached_has_bits & 0x00000040u) {
      queryid_ = from.queryid_;
    }
    if (cached_has_bits & 0x00000080u) {
      attendid_ = from.attendid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      totalflowid_ = from.totalflowid_;
    }
    if (cached_has_bits & 0x00000200u) {
      queryquota_ = from.queryquota_;
    }
    if (cached_has_bits & 0x00000400u) {
      attendquota_ = from.attendquota_;
    }
    if (cached_has_bits & 0x00000800u) {
      winlen_ = from.winlen_;
    }
    if (cached_has_bits & 0x00001000u) {
      errnum_ = from.errnum_;
    }
    if (cached_has_bits & 0x00002000u) {
      errnumrate_ = from.errnumrate_;
    }
    if (cached_has_bits & 0x00004000u) {
      cpurate_ = from.cpurate_;
    }
    if (cached_has_bits & 0x00008000u) {
      cpuinterval_ = from.cpuinterval_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 983040u) {
    if (cached_has_bits & 0x00010000u) {
      memrate_ = from.memrate_;
    }
    if (cached_has_bits & 0x00020000u) {
      queryquovaryid_ = from.queryquovaryid_;
    }
    if (cached_has_bits & 0x00040000u) {
      attendquovaryid_ = from.attendquovaryid_;
    }
    if (cached_has_bits & 0x00080000u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Flux::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:open_app_desc.Flux)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Flux::CopyFrom(const Flux& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:open_app_desc.Flux)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Flux::IsInitialized() const {
  return true;
}

void Flux::Swap(Flux* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Flux::InternalSwap(Flux* other) {
  using std::swap;
  referkey_.Swap(&other->referkey_);
  swap(normalenv_, other->normalenv_);
  swap(testenv_, other->testenv_);
  swap(flowswitch_, other->flowswitch_);
  swap(queryrate_, other->queryrate_);
  swap(attendrate_, other->attendrate_);
  swap(queryid_, other->queryid_);
  swap(attendid_, other->attendid_);
  swap(totalflowid_, other->totalflowid_);
  swap(queryquota_, other->queryquota_);
  swap(attendquota_, other->attendquota_);
  swap(winlen_, other->winlen_);
  swap(errnum_, other->errnum_);
  swap(errnumrate_, other->errnumrate_);
  swap(cpurate_, other->cpurate_);
  swap(cpuinterval_, other->cpuinterval_);
  swap(memrate_, other->memrate_);
  swap(queryquovaryid_, other->queryquovaryid_);
  swap(attendquovaryid_, other->attendquovaryid_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Flux::GetMetadata() const {
  protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportItem::kTimekeyFieldNumber;
const int ReportItem::kReportnumFieldNumber;
const int ReportItem::kRefuseFieldNumber;
const int ReportItem::kSetrefuseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportItem::ReportItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsReportItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:open_app_desc.ReportItem)
}
ReportItem::ReportItem(const ReportItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timekey_, &from.timekey_,
    static_cast<size_t>(reinterpret_cast<char*>(&setrefuse_) -
    reinterpret_cast<char*>(&timekey_)) + sizeof(setrefuse_));
  // @@protoc_insertion_point(copy_constructor:open_app_desc.ReportItem)
}

void ReportItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&timekey_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&setrefuse_) -
      reinterpret_cast<char*>(&timekey_)) + sizeof(setrefuse_));
}

ReportItem::~ReportItem() {
  // @@protoc_insertion_point(destructor:open_app_desc.ReportItem)
  SharedDtor();
}

void ReportItem::SharedDtor() {
}

void ReportItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReportItem::descriptor() {
  ::protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportItem& ReportItem::default_instance() {
  ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsReportItem();
  return *internal_default_instance();
}

ReportItem* ReportItem::New(::google::protobuf::Arena* arena) const {
  ReportItem* n = new ReportItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReportItem::Clear() {
// @@protoc_insertion_point(message_clear_start:open_app_desc.ReportItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&timekey_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&setrefuse_) -
        reinterpret_cast<char*>(&timekey_)) + sizeof(setrefuse_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReportItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:open_app_desc.ReportItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 timekey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_timekey();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timekey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 reportnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_reportnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &reportnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 refuse = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_refuse();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &refuse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 setrefuse = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_setrefuse();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &setrefuse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:open_app_desc.ReportItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:open_app_desc.ReportItem)
  return false;
#undef DO_
}

void ReportItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:open_app_desc.ReportItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 timekey = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timekey(), output);
  }

  // optional int64 reportnum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->reportnum(), output);
  }

  // optional int64 refuse = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->refuse(), output);
  }

  // optional int64 setrefuse = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->setrefuse(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:open_app_desc.ReportItem)
}

::google::protobuf::uint8* ReportItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:open_app_desc.ReportItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 timekey = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->timekey(), target);
  }

  // optional int64 reportnum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->reportnum(), target);
  }

  // optional int64 refuse = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->refuse(), target);
  }

  // optional int64 setrefuse = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->setrefuse(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:open_app_desc.ReportItem)
  return target;
}

size_t ReportItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:open_app_desc.ReportItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int64 timekey = 1;
    if (has_timekey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timekey());
    }

    // optional int64 reportnum = 2;
    if (has_reportnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->reportnum());
    }

    // optional int64 refuse = 3;
    if (has_refuse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->refuse());
    }

    // optional int64 setrefuse = 4;
    if (has_setrefuse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->setrefuse());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReportItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:open_app_desc.ReportItem)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:open_app_desc.ReportItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:open_app_desc.ReportItem)
    MergeFrom(*source);
  }
}

void ReportItem::MergeFrom(const ReportItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:open_app_desc.ReportItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      timekey_ = from.timekey_;
    }
    if (cached_has_bits & 0x00000002u) {
      reportnum_ = from.reportnum_;
    }
    if (cached_has_bits & 0x00000004u) {
      refuse_ = from.refuse_;
    }
    if (cached_has_bits & 0x00000008u) {
      setrefuse_ = from.setrefuse_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReportItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:open_app_desc.ReportItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportItem::CopyFrom(const ReportItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:open_app_desc.ReportItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportItem::IsInitialized() const {
  return true;
}

void ReportItem::Swap(ReportItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportItem::InternalSwap(ReportItem* other) {
  using std::swap;
  swap(timekey_, other->timekey_);
  swap(reportnum_, other->reportnum_);
  swap(refuse_, other->refuse_);
  swap(setrefuse_, other->setrefuse_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReportItem::GetMetadata() const {
  protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuotaReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuotaReq::kKeyFieldNumber;
const int QuotaReq::kReferkeyFieldNumber;
const int QuotaReq::kReportitemFieldNumber;
const int QuotaReq::kLocalquotaFieldNumber;
const int QuotaReq::kIdFieldNumber;
const int QuotaReq::kSerialFieldNumber;
const int QuotaReq::kTotalquotaFieldNumber;
const int QuotaReq::kOpenidFieldNumber;
const int QuotaReq::kUinFieldNumber;
const int QuotaReq::kNowsumFieldNumber;
const int QuotaReq::kWorkernumFieldNumber;
const int QuotaReq::kSetkeyFieldNumber;
const int QuotaReq::kBusinessFieldNumber;
const int QuotaReq::kSetenvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuotaReq::QuotaReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsQuotaReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:open_app_desc.QuotaReq)
}
QuotaReq::QuotaReq(const QuotaReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      reportitem_(from.reportitem_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  referkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_referkey()) {
    referkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referkey_);
  }
  serial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serial()) {
    serial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serial_);
  }
  openid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_openid()) {
    openid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.openid_);
  }
  setkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_setkey()) {
    setkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setkey_);
  }
  business_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_business()) {
    business_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.business_);
  }
  setenv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_setenv()) {
    setenv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setenv_);
  }
  ::memcpy(&localquota_, &from.localquota_,
    static_cast<size_t>(reinterpret_cast<char*>(&totalquota_) -
    reinterpret_cast<char*>(&localquota_)) + sizeof(totalquota_));
  // @@protoc_insertion_point(copy_constructor:open_app_desc.QuotaReq)
}

void QuotaReq::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  openid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  setkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  business_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  setenv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&localquota_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&totalquota_) -
      reinterpret_cast<char*>(&localquota_)) + sizeof(totalquota_));
}

QuotaReq::~QuotaReq() {
  // @@protoc_insertion_point(destructor:open_app_desc.QuotaReq)
  SharedDtor();
}

void QuotaReq::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  openid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  setkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  business_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  setenv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QuotaReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuotaReq::descriptor() {
  ::protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuotaReq& QuotaReq::default_instance() {
  ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsQuotaReq();
  return *internal_default_instance();
}

QuotaReq* QuotaReq::New(::google::protobuf::Arena* arena) const {
  QuotaReq* n = new QuotaReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuotaReq::Clear() {
// @@protoc_insertion_point(message_clear_start:open_app_desc.QuotaReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reportitem_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*key_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!referkey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*referkey_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!serial_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*serial_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!openid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*openid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!setkey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*setkey_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!business_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*business_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!setenv_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*setenv_.UnsafeRawStringPointer())->clear();
    }
  }
  localquota_ = 0;
  if (cached_has_bits & 7936u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&totalquota_) -
        reinterpret_cast<char*>(&id_)) + sizeof(totalquota_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QuotaReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:open_app_desc.QuotaReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes referkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_referkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .open_app_desc.ReportItem reportitem = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_reportitem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 localquota = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_localquota();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &localquota_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes serial = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serial()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 totalquota = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_totalquota();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalquota_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes openid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_openid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 uin = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_uin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 nowsum = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_nowsum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nowsum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 workernum = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_workernum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &workernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes setkey = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_setkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes business = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_business()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes setenv = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_setenv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:open_app_desc.QuotaReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:open_app_desc.QuotaReq)
  return false;
#undef DO_
}

void QuotaReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:open_app_desc.QuotaReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // optional bytes referkey = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->referkey(), output);
  }

  // repeated .open_app_desc.ReportItem reportitem = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reportitem_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->reportitem(static_cast<int>(i)), output);
  }

  // optional int32 localquota = 4;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->localquota(), output);
  }

  // optional int32 id = 5;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->id(), output);
  }

  // optional bytes serial = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->serial(), output);
  }

  // optional int32 totalquota = 7;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->totalquota(), output);
  }

  // optional bytes openid = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->openid(), output);
  }

  // optional int64 uin = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->uin(), output);
  }

  // optional int64 nowsum = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->nowsum(), output);
  }

  // optional int64 workernum = 11;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->workernum(), output);
  }

  // optional bytes setkey = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->setkey(), output);
  }

  // optional bytes business = 13;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->business(), output);
  }

  // optional bytes setenv = 14;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->setenv(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:open_app_desc.QuotaReq)
}

::google::protobuf::uint8* QuotaReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:open_app_desc.QuotaReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // optional bytes referkey = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->referkey(), target);
  }

  // repeated .open_app_desc.ReportItem reportitem = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reportitem_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->reportitem(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 localquota = 4;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->localquota(), target);
  }

  // optional int32 id = 5;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->id(), target);
  }

  // optional bytes serial = 6;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->serial(), target);
  }

  // optional int32 totalquota = 7;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->totalquota(), target);
  }

  // optional bytes openid = 8;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->openid(), target);
  }

  // optional int64 uin = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->uin(), target);
  }

  // optional int64 nowsum = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->nowsum(), target);
  }

  // optional int64 workernum = 11;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->workernum(), target);
  }

  // optional bytes setkey = 12;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->setkey(), target);
  }

  // optional bytes business = 13;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->business(), target);
  }

  // optional bytes setenv = 14;
  if (cached_has_bits & 0x00000040u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->setenv(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:open_app_desc.QuotaReq)
  return target;
}

size_t QuotaReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:open_app_desc.QuotaReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .open_app_desc.ReportItem reportitem = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->reportitem_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reportitem(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->key());
    }

    // optional bytes referkey = 2;
    if (has_referkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->referkey());
    }

    // optional bytes serial = 6;
    if (has_serial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->serial());
    }

    // optional bytes openid = 8;
    if (has_openid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->openid());
    }

    // optional bytes setkey = 12;
    if (has_setkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->setkey());
    }

    // optional bytes business = 13;
    if (has_business()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->business());
    }

    // optional bytes setenv = 14;
    if (has_setenv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->setenv());
    }

    // optional int32 localquota = 4;
    if (has_localquota()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->localquota());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional int32 id = 5;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int64 uin = 9;
    if (has_uin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uin());
    }

    // optional int64 nowsum = 10;
    if (has_nowsum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->nowsum());
    }

    // optional int64 workernum = 11;
    if (has_workernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->workernum());
    }

    // optional int32 totalquota = 7;
    if (has_totalquota()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->totalquota());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuotaReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:open_app_desc.QuotaReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QuotaReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuotaReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:open_app_desc.QuotaReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:open_app_desc.QuotaReq)
    MergeFrom(*source);
  }
}

void QuotaReq::MergeFrom(const QuotaReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:open_app_desc.QuotaReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reportitem_.MergeFrom(from.reportitem_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_referkey();
      referkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referkey_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_serial();
      serial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serial_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_openid();
      openid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.openid_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_setkey();
      setkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setkey_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_business();
      business_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.business_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_setenv();
      setenv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setenv_);
    }
    if (cached_has_bits & 0x00000080u) {
      localquota_ = from.localquota_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000200u) {
      uin_ = from.uin_;
    }
    if (cached_has_bits & 0x00000400u) {
      nowsum_ = from.nowsum_;
    }
    if (cached_has_bits & 0x00000800u) {
      workernum_ = from.workernum_;
    }
    if (cached_has_bits & 0x00001000u) {
      totalquota_ = from.totalquota_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void QuotaReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:open_app_desc.QuotaReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuotaReq::CopyFrom(const QuotaReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:open_app_desc.QuotaReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuotaReq::IsInitialized() const {
  return true;
}

void QuotaReq::Swap(QuotaReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuotaReq::InternalSwap(QuotaReq* other) {
  using std::swap;
  reportitem_.InternalSwap(&other->reportitem_);
  key_.Swap(&other->key_);
  referkey_.Swap(&other->referkey_);
  serial_.Swap(&other->serial_);
  openid_.Swap(&other->openid_);
  setkey_.Swap(&other->setkey_);
  business_.Swap(&other->business_);
  setenv_.Swap(&other->setenv_);
  swap(localquota_, other->localquota_);
  swap(id_, other->id_);
  swap(uin_, other->uin_);
  swap(nowsum_, other->nowsum_);
  swap(workernum_, other->workernum_);
  swap(totalquota_, other->totalquota_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuotaReq::GetMetadata() const {
  protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuotaRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuotaRsp::kKeyFieldNumber;
const int QuotaRsp::kLocalqFieldNumber;
const int QuotaRsp::kTotalqFieldNumber;
const int QuotaRsp::kPartnernumFieldNumber;
const int QuotaRsp::kSerialFieldNumber;
const int QuotaRsp::kIpnumFieldNumber;
const int QuotaRsp::kAlloctypeFieldNumber;
const int QuotaRsp::kAllocpartnumFieldNumber;
const int QuotaRsp::kAlloctimeFieldNumber;
const int QuotaRsp::kSelfFieldNumber;
const int QuotaRsp::kTotalFieldNumber;
const int QuotaRsp::kNowsumFieldNumber;
const int QuotaRsp::kTotalworkernumFieldNumber;
const int QuotaRsp::kSetquotaFieldNumber;
const int QuotaRsp::kSetsumFieldNumber;
const int QuotaRsp::kProcquotaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuotaRsp::QuotaRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsQuotaRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:open_app_desc.QuotaRsp)
}
QuotaRsp::QuotaRsp(const QuotaRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  serial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serial()) {
    serial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serial_);
  }
  ::memcpy(&localq_, &from.localq_,
    static_cast<size_t>(reinterpret_cast<char*>(&procquota_) -
    reinterpret_cast<char*>(&localq_)) + sizeof(procquota_));
  // @@protoc_insertion_point(copy_constructor:open_app_desc.QuotaRsp)
}

void QuotaRsp::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&localq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&procquota_) -
      reinterpret_cast<char*>(&localq_)) + sizeof(procquota_));
}

QuotaRsp::~QuotaRsp() {
  // @@protoc_insertion_point(destructor:open_app_desc.QuotaRsp)
  SharedDtor();
}

void QuotaRsp::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QuotaRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuotaRsp::descriptor() {
  ::protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuotaRsp& QuotaRsp::default_instance() {
  ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsQuotaRsp();
  return *internal_default_instance();
}

QuotaRsp* QuotaRsp::New(::google::protobuf::Arena* arena) const {
  QuotaRsp* n = new QuotaRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuotaRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:open_app_desc.QuotaRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*key_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!serial_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*serial_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&localq_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&allocpartnum_) -
        reinterpret_cast<char*>(&localq_)) + sizeof(allocpartnum_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&alloctime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&procquota_) -
        reinterpret_cast<char*>(&alloctime_)) + sizeof(procquota_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QuotaRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:open_app_desc.QuotaRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 localq = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_localq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &localq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 totalq = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_totalq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 partnernum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_partnernum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &partnernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes serial = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serial()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ipnum = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_ipnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ipnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 alloctype = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_alloctype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &alloctype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 allocpartnum = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_allocpartnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &allocpartnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 alloctime = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_alloctime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &alloctime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 self = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_self();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &self_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 total = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_total();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 nowsum = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_nowsum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nowsum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 totalworkernum = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_totalworkernum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalworkernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 setquota = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_setquota();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &setquota_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 setsum = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_setsum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &setsum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 procquota = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_procquota();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &procquota_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:open_app_desc.QuotaRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:open_app_desc.QuotaRsp)
  return false;
#undef DO_
}

void QuotaRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:open_app_desc.QuotaRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // optional int64 localq = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->localq(), output);
  }

  // optional int64 totalq = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->totalq(), output);
  }

  // optional int32 partnernum = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->partnernum(), output);
  }

  // optional bytes serial = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->serial(), output);
  }

  // optional int32 ipnum = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->ipnum(), output);
  }

  // optional int32 alloctype = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->alloctype(), output);
  }

  // optional int32 allocpartnum = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->allocpartnum(), output);
  }

  // optional int64 alloctime = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->alloctime(), output);
  }

  // optional int64 self = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->self(), output);
  }

  // optional int64 total = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->total(), output);
  }

  // optional int64 nowsum = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->nowsum(), output);
  }

  // optional int64 totalworkernum = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->totalworkernum(), output);
  }

  // optional int32 setquota = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->setquota(), output);
  }

  // optional int32 setsum = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->setsum(), output);
  }

  // optional int32 procquota = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->procquota(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:open_app_desc.QuotaRsp)
}

::google::protobuf::uint8* QuotaRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:open_app_desc.QuotaRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // optional int64 localq = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->localq(), target);
  }

  // optional int64 totalq = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->totalq(), target);
  }

  // optional int32 partnernum = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->partnernum(), target);
  }

  // optional bytes serial = 5;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->serial(), target);
  }

  // optional int32 ipnum = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->ipnum(), target);
  }

  // optional int32 alloctype = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->alloctype(), target);
  }

  // optional int32 allocpartnum = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->allocpartnum(), target);
  }

  // optional int64 alloctime = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->alloctime(), target);
  }

  // optional int64 self = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->self(), target);
  }

  // optional int64 total = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->total(), target);
  }

  // optional int64 nowsum = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->nowsum(), target);
  }

  // optional int64 totalworkernum = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->totalworkernum(), target);
  }

  // optional int32 setquota = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->setquota(), target);
  }

  // optional int32 setsum = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->setsum(), target);
  }

  // optional int32 procquota = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->procquota(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:open_app_desc.QuotaRsp)
  return target;
}

size_t QuotaRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:open_app_desc.QuotaRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->key());
    }

    // optional bytes serial = 5;
    if (has_serial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->serial());
    }

    // optional int64 localq = 2;
    if (has_localq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->localq());
    }

    // optional int64 totalq = 3;
    if (has_totalq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->totalq());
    }

    // optional int32 partnernum = 4;
    if (has_partnernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->partnernum());
    }

    // optional int32 ipnum = 6;
    if (has_ipnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ipnum());
    }

    // optional int32 alloctype = 7;
    if (has_alloctype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->alloctype());
    }

    // optional int32 allocpartnum = 8;
    if (has_allocpartnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->allocpartnum());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int64 alloctime = 9;
    if (has_alloctime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->alloctime());
    }

    // optional int64 self = 10;
    if (has_self()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->self());
    }

    // optional int64 total = 11;
    if (has_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->total());
    }

    // optional int64 nowsum = 12;
    if (has_nowsum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->nowsum());
    }

    // optional int64 totalworkernum = 13;
    if (has_totalworkernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->totalworkernum());
    }

    // optional int32 setquota = 14;
    if (has_setquota()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->setquota());
    }

    // optional int32 setsum = 15;
    if (has_setsum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->setsum());
    }

    // optional int32 procquota = 16;
    if (has_procquota()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->procquota());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuotaRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:open_app_desc.QuotaRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QuotaRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuotaRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:open_app_desc.QuotaRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:open_app_desc.QuotaRsp)
    MergeFrom(*source);
  }
}

void QuotaRsp::MergeFrom(const QuotaRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:open_app_desc.QuotaRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_serial();
      serial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serial_);
    }
    if (cached_has_bits & 0x00000004u) {
      localq_ = from.localq_;
    }
    if (cached_has_bits & 0x00000008u) {
      totalq_ = from.totalq_;
    }
    if (cached_has_bits & 0x00000010u) {
      partnernum_ = from.partnernum_;
    }
    if (cached_has_bits & 0x00000020u) {
      ipnum_ = from.ipnum_;
    }
    if (cached_has_bits & 0x00000040u) {
      alloctype_ = from.alloctype_;
    }
    if (cached_has_bits & 0x00000080u) {
      allocpartnum_ = from.allocpartnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      alloctime_ = from.alloctime_;
    }
    if (cached_has_bits & 0x00000200u) {
      self_ = from.self_;
    }
    if (cached_has_bits & 0x00000400u) {
      total_ = from.total_;
    }
    if (cached_has_bits & 0x00000800u) {
      nowsum_ = from.nowsum_;
    }
    if (cached_has_bits & 0x00001000u) {
      totalworkernum_ = from.totalworkernum_;
    }
    if (cached_has_bits & 0x00002000u) {
      setquota_ = from.setquota_;
    }
    if (cached_has_bits & 0x00004000u) {
      setsum_ = from.setsum_;
    }
    if (cached_has_bits & 0x00008000u) {
      procquota_ = from.procquota_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void QuotaRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:open_app_desc.QuotaRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuotaRsp::CopyFrom(const QuotaRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:open_app_desc.QuotaRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuotaRsp::IsInitialized() const {
  return true;
}

void QuotaRsp::Swap(QuotaRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuotaRsp::InternalSwap(QuotaRsp* other) {
  using std::swap;
  key_.Swap(&other->key_);
  serial_.Swap(&other->serial_);
  swap(localq_, other->localq_);
  swap(totalq_, other->totalq_);
  swap(partnernum_, other->partnernum_);
  swap(ipnum_, other->ipnum_);
  swap(alloctype_, other->alloctype_);
  swap(allocpartnum_, other->allocpartnum_);
  swap(alloctime_, other->alloctime_);
  swap(self_, other->self_);
  swap(total_, other->total_);
  swap(nowsum_, other->nowsum_);
  swap(totalworkernum_, other->totalworkernum_);
  swap(setquota_, other->setquota_);
  swap(setsum_, other->setsum_);
  swap(procquota_, other->procquota_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuotaRsp::GetMetadata() const {
  protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetItem::kSetkeyFieldNumber;
const int SetItem::kSetquotaFieldNumber;
const int SetItem::kIplistFieldNumber;
const int SetItem::kFeaidFieldNumber;
const int SetItem::kRefuseidFieldNumber;
const int SetItem::kSetrefuseidFieldNumber;
const int SetItem::kRealidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetItem::SetItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsSetItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:open_app_desc.SetItem)
}
SetItem::SetItem(const SetItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      iplist_(from.iplist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  setkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_setkey()) {
    setkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setkey_);
  }
  ::memcpy(&setquota_, &from.setquota_,
    static_cast<size_t>(reinterpret_cast<char*>(&realid_) -
    reinterpret_cast<char*>(&setquota_)) + sizeof(realid_));
  // @@protoc_insertion_point(copy_constructor:open_app_desc.SetItem)
}

void SetItem::SharedCtor() {
  _cached_size_ = 0;
  setkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&setquota_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&realid_) -
      reinterpret_cast<char*>(&setquota_)) + sizeof(realid_));
}

SetItem::~SetItem() {
  // @@protoc_insertion_point(destructor:open_app_desc.SetItem)
  SharedDtor();
}

void SetItem::SharedDtor() {
  setkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetItem::descriptor() {
  ::protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetItem& SetItem::default_instance() {
  ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsSetItem();
  return *internal_default_instance();
}

SetItem* SetItem::New(::google::protobuf::Arena* arena) const {
  SetItem* n = new SetItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetItem::Clear() {
// @@protoc_insertion_point(message_clear_start:open_app_desc.SetItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  iplist_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!setkey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*setkey_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 62u) {
    ::memset(&setquota_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&realid_) -
        reinterpret_cast<char*>(&setquota_)) + sizeof(realid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:open_app_desc.SetItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes setkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_setkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 setquota = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_setquota();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &setquota_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes iplist = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_iplist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 feaid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_feaid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &feaid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 refuseid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_refuseid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refuseid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 setrefuseid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_setrefuseid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &setrefuseid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 realid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_realid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &realid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:open_app_desc.SetItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:open_app_desc.SetItem)
  return false;
#undef DO_
}

void SetItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:open_app_desc.SetItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes setkey = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->setkey(), output);
  }

  // optional int32 setquota = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->setquota(), output);
  }

  // repeated bytes iplist = 3;
  for (int i = 0, n = this->iplist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->iplist(i), output);
  }

  // optional int32 feaid = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->feaid(), output);
  }

  // optional int32 refuseid = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->refuseid(), output);
  }

  // optional int32 setrefuseid = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->setrefuseid(), output);
  }

  // optional int32 realid = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->realid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:open_app_desc.SetItem)
}

::google::protobuf::uint8* SetItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:open_app_desc.SetItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes setkey = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->setkey(), target);
  }

  // optional int32 setquota = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->setquota(), target);
  }

  // repeated bytes iplist = 3;
  for (int i = 0, n = this->iplist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(3, this->iplist(i), target);
  }

  // optional int32 feaid = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->feaid(), target);
  }

  // optional int32 refuseid = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->refuseid(), target);
  }

  // optional int32 setrefuseid = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->setrefuseid(), target);
  }

  // optional int32 realid = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->realid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:open_app_desc.SetItem)
  return target;
}

size_t SetItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:open_app_desc.SetItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated bytes iplist = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->iplist_size());
  for (int i = 0, n = this->iplist_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->iplist(i));
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes setkey = 1;
    if (has_setkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->setkey());
    }

    // optional int32 setquota = 2;
    if (has_setquota()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->setquota());
    }

    // optional int32 feaid = 4;
    if (has_feaid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->feaid());
    }

    // optional int32 refuseid = 5;
    if (has_refuseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refuseid());
    }

    // optional int32 setrefuseid = 6;
    if (has_setrefuseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->setrefuseid());
    }

    // optional int32 realid = 7;
    if (has_realid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->realid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:open_app_desc.SetItem)
  GOOGLE_DCHECK_NE(&from, this);
  const SetItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:open_app_desc.SetItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:open_app_desc.SetItem)
    MergeFrom(*source);
  }
}

void SetItem::MergeFrom(const SetItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:open_app_desc.SetItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  iplist_.MergeFrom(from.iplist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_setkey();
      setkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setkey_);
    }
    if (cached_has_bits & 0x00000002u) {
      setquota_ = from.setquota_;
    }
    if (cached_has_bits & 0x00000004u) {
      feaid_ = from.feaid_;
    }
    if (cached_has_bits & 0x00000008u) {
      refuseid_ = from.refuseid_;
    }
    if (cached_has_bits & 0x00000010u) {
      setrefuseid_ = from.setrefuseid_;
    }
    if (cached_has_bits & 0x00000020u) {
      realid_ = from.realid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:open_app_desc.SetItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetItem::CopyFrom(const SetItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:open_app_desc.SetItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetItem::IsInitialized() const {
  return true;
}

void SetItem::Swap(SetItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetItem::InternalSwap(SetItem* other) {
  using std::swap;
  iplist_.InternalSwap(&other->iplist_);
  setkey_.Swap(&other->setkey_);
  swap(setquota_, other->setquota_);
  swap(feaid_, other->feaid_);
  swap(refuseid_, other->refuseid_);
  swap(setrefuseid_, other->setrefuseid_);
  swap(realid_, other->realid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetItem::GetMetadata() const {
  protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetMacInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetMacInfo::kItemlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetMacInfo::SetMacInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsSetMacInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:open_app_desc.SetMacInfo)
}
SetMacInfo::SetMacInfo(const SetMacInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      itemlist_(from.itemlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:open_app_desc.SetMacInfo)
}

void SetMacInfo::SharedCtor() {
  _cached_size_ = 0;
}

SetMacInfo::~SetMacInfo() {
  // @@protoc_insertion_point(destructor:open_app_desc.SetMacInfo)
  SharedDtor();
}

void SetMacInfo::SharedDtor() {
}

void SetMacInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetMacInfo::descriptor() {
  ::protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetMacInfo& SetMacInfo::default_instance() {
  ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsSetMacInfo();
  return *internal_default_instance();
}

SetMacInfo* SetMacInfo::New(::google::protobuf::Arena* arena) const {
  SetMacInfo* n = new SetMacInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetMacInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:open_app_desc.SetMacInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  itemlist_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetMacInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:open_app_desc.SetMacInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .open_app_desc.SetItem itemlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_itemlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:open_app_desc.SetMacInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:open_app_desc.SetMacInfo)
  return false;
#undef DO_
}

void SetMacInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:open_app_desc.SetMacInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .open_app_desc.SetItem itemlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->itemlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->itemlist(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:open_app_desc.SetMacInfo)
}

::google::protobuf::uint8* SetMacInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:open_app_desc.SetMacInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .open_app_desc.SetItem itemlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->itemlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->itemlist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:open_app_desc.SetMacInfo)
  return target;
}

size_t SetMacInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:open_app_desc.SetMacInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .open_app_desc.SetItem itemlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->itemlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->itemlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetMacInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:open_app_desc.SetMacInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMacInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetMacInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:open_app_desc.SetMacInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:open_app_desc.SetMacInfo)
    MergeFrom(*source);
  }
}

void SetMacInfo::MergeFrom(const SetMacInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:open_app_desc.SetMacInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  itemlist_.MergeFrom(from.itemlist_);
}

void SetMacInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:open_app_desc.SetMacInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMacInfo::CopyFrom(const SetMacInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:open_app_desc.SetMacInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMacInfo::IsInitialized() const {
  return true;
}

void SetMacInfo::Swap(SetMacInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetMacInfo::InternalSwap(SetMacInfo* other) {
  using std::swap;
  itemlist_.InternalSwap(&other->itemlist_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetMacInfo::GetMetadata() const {
  protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetFileInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetFileInfo::kFpathFieldNumber;
const int SetFileInfo::kFnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetFileInfo::SetFileInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsSetFileInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:open_app_desc.SetFileInfo)
}
SetFileInfo::SetFileInfo(const SetFileInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      fname_(from.fname_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fpath()) {
    fpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fpath_);
  }
  // @@protoc_insertion_point(copy_constructor:open_app_desc.SetFileInfo)
}

void SetFileInfo::SharedCtor() {
  _cached_size_ = 0;
  fpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetFileInfo::~SetFileInfo() {
  // @@protoc_insertion_point(destructor:open_app_desc.SetFileInfo)
  SharedDtor();
}

void SetFileInfo::SharedDtor() {
  fpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetFileInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFileInfo::descriptor() {
  ::protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetFileInfo& SetFileInfo::default_instance() {
  ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsSetFileInfo();
  return *internal_default_instance();
}

SetFileInfo* SetFileInfo::New(::google::protobuf::Arena* arena) const {
  SetFileInfo* n = new SetFileInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetFileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:open_app_desc.SetFileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fname_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!fpath_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*fpath_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetFileInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:open_app_desc.SetFileInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes fpath = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_fpath()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes fname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_fname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:open_app_desc.SetFileInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:open_app_desc.SetFileInfo)
  return false;
#undef DO_
}

void SetFileInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:open_app_desc.SetFileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes fpath = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->fpath(), output);
  }

  // repeated bytes fname = 2;
  for (int i = 0, n = this->fname_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->fname(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:open_app_desc.SetFileInfo)
}

::google::protobuf::uint8* SetFileInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:open_app_desc.SetFileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes fpath = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->fpath(), target);
  }

  // repeated bytes fname = 2;
  for (int i = 0, n = this->fname_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->fname(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:open_app_desc.SetFileInfo)
  return target;
}

size_t SetFileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:open_app_desc.SetFileInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated bytes fname = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->fname_size());
  for (int i = 0, n = this->fname_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->fname(i));
  }

  // optional bytes fpath = 1;
  if (has_fpath()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->fpath());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetFileInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:open_app_desc.SetFileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SetFileInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetFileInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:open_app_desc.SetFileInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:open_app_desc.SetFileInfo)
    MergeFrom(*source);
  }
}

void SetFileInfo::MergeFrom(const SetFileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:open_app_desc.SetFileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fname_.MergeFrom(from.fname_);
  if (from.has_fpath()) {
    set_has_fpath();
    fpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fpath_);
  }
}

void SetFileInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:open_app_desc.SetFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFileInfo::CopyFrom(const SetFileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:open_app_desc.SetFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFileInfo::IsInitialized() const {
  return true;
}

void SetFileInfo::Swap(SetFileInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetFileInfo::InternalSwap(SetFileInfo* other) {
  using std::swap;
  fname_.InternalSwap(&other->fname_);
  fpath_.Swap(&other->fpath_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetFileInfo::GetMetadata() const {
  protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcReport::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcReport::kProcidFieldNumber;
const int ProcReport::kProclistFieldNumber;
const int ProcReport::kSetkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcReport::ProcReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsProcReport();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:open_app_desc.ProcReport)
}
ProcReport::ProcReport(const ProcReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      proclist_(from.proclist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  procid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_procid()) {
    procid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.procid_);
  }
  setkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_setkey()) {
    setkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setkey_);
  }
  // @@protoc_insertion_point(copy_constructor:open_app_desc.ProcReport)
}

void ProcReport::SharedCtor() {
  _cached_size_ = 0;
  procid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  setkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ProcReport::~ProcReport() {
  // @@protoc_insertion_point(destructor:open_app_desc.ProcReport)
  SharedDtor();
}

void ProcReport::SharedDtor() {
  procid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  setkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProcReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProcReport::descriptor() {
  ::protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcReport& ProcReport::default_instance() {
  ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsProcReport();
  return *internal_default_instance();
}

ProcReport* ProcReport::New(::google::protobuf::Arena* arena) const {
  ProcReport* n = new ProcReport;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProcReport::Clear() {
// @@protoc_insertion_point(message_clear_start:open_app_desc.ProcReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  proclist_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!procid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*procid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!setkey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*setkey_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProcReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:open_app_desc.ProcReport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes procid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_procid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .open_app_desc.ReportItem proclist = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_proclist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes setkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_setkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:open_app_desc.ProcReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:open_app_desc.ProcReport)
  return false;
#undef DO_
}

void ProcReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:open_app_desc.ProcReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes procid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->procid(), output);
  }

  // repeated .open_app_desc.ReportItem proclist = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->proclist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->proclist(static_cast<int>(i)), output);
  }

  // optional bytes setkey = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->setkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:open_app_desc.ProcReport)
}

::google::protobuf::uint8* ProcReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:open_app_desc.ProcReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes procid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->procid(), target);
  }

  // repeated .open_app_desc.ReportItem proclist = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->proclist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->proclist(static_cast<int>(i)), deterministic, target);
  }

  // optional bytes setkey = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->setkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:open_app_desc.ProcReport)
  return target;
}

size_t ProcReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:open_app_desc.ProcReport)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .open_app_desc.ReportItem proclist = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->proclist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->proclist(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes procid = 1;
    if (has_procid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->procid());
    }

    // optional bytes setkey = 3;
    if (has_setkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->setkey());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProcReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:open_app_desc.ProcReport)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:open_app_desc.ProcReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:open_app_desc.ProcReport)
    MergeFrom(*source);
  }
}

void ProcReport::MergeFrom(const ProcReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:open_app_desc.ProcReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  proclist_.MergeFrom(from.proclist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_procid();
      procid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.procid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_setkey();
      setkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setkey_);
    }
  }
}

void ProcReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:open_app_desc.ProcReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcReport::CopyFrom(const ProcReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:open_app_desc.ProcReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcReport::IsInitialized() const {
  return true;
}

void ProcReport::Swap(ProcReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcReport::InternalSwap(ProcReport* other) {
  using std::swap;
  proclist_.InternalSwap(&other->proclist_);
  procid_.Swap(&other->procid_);
  setkey_.Swap(&other->setkey_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProcReport::GetMetadata() const {
  protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetQuotaReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetQuotaReq::kSetkeyFieldNumber;
const int SetQuotaReq::kItemlistFieldNumber;
const int SetQuotaReq::kWorkernumFieldNumber;
const int SetQuotaReq::kIdFieldNumber;
const int SetQuotaReq::kProcitemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetQuotaReq::SetQuotaReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsSetQuotaReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:open_app_desc.SetQuotaReq)
}
SetQuotaReq::SetQuotaReq(const SetQuotaReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      itemlist_(from.itemlist_),
      procitem_(from.procitem_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  setkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_setkey()) {
    setkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setkey_);
  }
  ::memcpy(&workernum_, &from.workernum_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&workernum_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:open_app_desc.SetQuotaReq)
}

void SetQuotaReq::SharedCtor() {
  _cached_size_ = 0;
  setkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&workernum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&workernum_)) + sizeof(id_));
}

SetQuotaReq::~SetQuotaReq() {
  // @@protoc_insertion_point(destructor:open_app_desc.SetQuotaReq)
  SharedDtor();
}

void SetQuotaReq::SharedDtor() {
  setkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetQuotaReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetQuotaReq::descriptor() {
  ::protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetQuotaReq& SetQuotaReq::default_instance() {
  ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsSetQuotaReq();
  return *internal_default_instance();
}

SetQuotaReq* SetQuotaReq::New(::google::protobuf::Arena* arena) const {
  SetQuotaReq* n = new SetQuotaReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetQuotaReq::Clear() {
// @@protoc_insertion_point(message_clear_start:open_app_desc.SetQuotaReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  itemlist_.Clear();
  procitem_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!setkey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*setkey_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&workernum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&workernum_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetQuotaReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:open_app_desc.SetQuotaReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes setkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_setkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .open_app_desc.ReportItem itemlist = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_itemlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 workernum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_workernum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &workernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .open_app_desc.ProcReport procitem = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_procitem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:open_app_desc.SetQuotaReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:open_app_desc.SetQuotaReq)
  return false;
#undef DO_
}

void SetQuotaReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:open_app_desc.SetQuotaReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes setkey = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->setkey(), output);
  }

  // repeated .open_app_desc.ReportItem itemlist = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->itemlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->itemlist(static_cast<int>(i)), output);
  }

  // optional int32 workernum = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->workernum(), output);
  }

  // optional int32 id = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->id(), output);
  }

  // repeated .open_app_desc.ProcReport procitem = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->procitem_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->procitem(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:open_app_desc.SetQuotaReq)
}

::google::protobuf::uint8* SetQuotaReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:open_app_desc.SetQuotaReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes setkey = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->setkey(), target);
  }

  // repeated .open_app_desc.ReportItem itemlist = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->itemlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->itemlist(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 workernum = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->workernum(), target);
  }

  // optional int32 id = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->id(), target);
  }

  // repeated .open_app_desc.ProcReport procitem = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->procitem_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->procitem(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:open_app_desc.SetQuotaReq)
  return target;
}

size_t SetQuotaReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:open_app_desc.SetQuotaReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .open_app_desc.ReportItem itemlist = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->itemlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->itemlist(static_cast<int>(i)));
    }
  }

  // repeated .open_app_desc.ProcReport procitem = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->procitem_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->procitem(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes setkey = 1;
    if (has_setkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->setkey());
    }

    // optional int32 workernum = 3;
    if (has_workernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->workernum());
    }

    // optional int32 id = 4;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetQuotaReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:open_app_desc.SetQuotaReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetQuotaReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetQuotaReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:open_app_desc.SetQuotaReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:open_app_desc.SetQuotaReq)
    MergeFrom(*source);
  }
}

void SetQuotaReq::MergeFrom(const SetQuotaReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:open_app_desc.SetQuotaReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  itemlist_.MergeFrom(from.itemlist_);
  procitem_.MergeFrom(from.procitem_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_setkey();
      setkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setkey_);
    }
    if (cached_has_bits & 0x00000002u) {
      workernum_ = from.workernum_;
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetQuotaReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:open_app_desc.SetQuotaReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetQuotaReq::CopyFrom(const SetQuotaReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:open_app_desc.SetQuotaReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetQuotaReq::IsInitialized() const {
  return true;
}

void SetQuotaReq::Swap(SetQuotaReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetQuotaReq::InternalSwap(SetQuotaReq* other) {
  using std::swap;
  itemlist_.InternalSwap(&other->itemlist_);
  procitem_.InternalSwap(&other->procitem_);
  setkey_.Swap(&other->setkey_);
  swap(workernum_, other->workernum_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetQuotaReq::GetMetadata() const {
  protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcQ::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcQ::kProcidFieldNumber;
const int ProcQ::kProcquotaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcQ::ProcQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsProcQ();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:open_app_desc.ProcQ)
}
ProcQ::ProcQ(const ProcQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  procid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_procid()) {
    procid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.procid_);
  }
  procquota_ = from.procquota_;
  // @@protoc_insertion_point(copy_constructor:open_app_desc.ProcQ)
}

void ProcQ::SharedCtor() {
  _cached_size_ = 0;
  procid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  procquota_ = 0;
}

ProcQ::~ProcQ() {
  // @@protoc_insertion_point(destructor:open_app_desc.ProcQ)
  SharedDtor();
}

void ProcQ::SharedDtor() {
  procid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProcQ::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProcQ::descriptor() {
  ::protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcQ& ProcQ::default_instance() {
  ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsProcQ();
  return *internal_default_instance();
}

ProcQ* ProcQ::New(::google::protobuf::Arena* arena) const {
  ProcQ* n = new ProcQ;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProcQ::Clear() {
// @@protoc_insertion_point(message_clear_start:open_app_desc.ProcQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!procid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*procid_.UnsafeRawStringPointer())->clear();
  }
  procquota_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProcQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:open_app_desc.ProcQ)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes procid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_procid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 procquota = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_procquota();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &procquota_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:open_app_desc.ProcQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:open_app_desc.ProcQ)
  return false;
#undef DO_
}

void ProcQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:open_app_desc.ProcQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes procid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->procid(), output);
  }

  // optional int32 procquota = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->procquota(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:open_app_desc.ProcQ)
}

::google::protobuf::uint8* ProcQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:open_app_desc.ProcQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes procid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->procid(), target);
  }

  // optional int32 procquota = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->procquota(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:open_app_desc.ProcQ)
  return target;
}

size_t ProcQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:open_app_desc.ProcQ)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes procid = 1;
    if (has_procid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->procid());
    }

    // optional int32 procquota = 2;
    if (has_procquota()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->procquota());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProcQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:open_app_desc.ProcQ)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcQ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:open_app_desc.ProcQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:open_app_desc.ProcQ)
    MergeFrom(*source);
  }
}

void ProcQ::MergeFrom(const ProcQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:open_app_desc.ProcQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_procid();
      procid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.procid_);
    }
    if (cached_has_bits & 0x00000002u) {
      procquota_ = from.procquota_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProcQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:open_app_desc.ProcQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcQ::CopyFrom(const ProcQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:open_app_desc.ProcQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcQ::IsInitialized() const {
  return true;
}

void ProcQ::Swap(ProcQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcQ::InternalSwap(ProcQ* other) {
  using std::swap;
  procid_.Swap(&other->procid_);
  swap(procquota_, other->procquota_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProcQ::GetMetadata() const {
  protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetQuotaRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetQuotaRsp::kSetkeyFieldNumber;
const int SetQuotaRsp::kSetsumFieldNumber;
const int SetQuotaRsp::kProcqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetQuotaRsp::SetQuotaRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsSetQuotaRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:open_app_desc.SetQuotaRsp)
}
SetQuotaRsp::SetQuotaRsp(const SetQuotaRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      procq_(from.procq_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  setkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_setkey()) {
    setkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setkey_);
  }
  setsum_ = from.setsum_;
  // @@protoc_insertion_point(copy_constructor:open_app_desc.SetQuotaRsp)
}

void SetQuotaRsp::SharedCtor() {
  _cached_size_ = 0;
  setkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  setsum_ = 0;
}

SetQuotaRsp::~SetQuotaRsp() {
  // @@protoc_insertion_point(destructor:open_app_desc.SetQuotaRsp)
  SharedDtor();
}

void SetQuotaRsp::SharedDtor() {
  setkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetQuotaRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetQuotaRsp::descriptor() {
  ::protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetQuotaRsp& SetQuotaRsp::default_instance() {
  ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsSetQuotaRsp();
  return *internal_default_instance();
}

SetQuotaRsp* SetQuotaRsp::New(::google::protobuf::Arena* arena) const {
  SetQuotaRsp* n = new SetQuotaRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetQuotaRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:open_app_desc.SetQuotaRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  procq_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!setkey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*setkey_.UnsafeRawStringPointer())->clear();
  }
  setsum_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetQuotaRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:open_app_desc.SetQuotaRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes setkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_setkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 setsum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_setsum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &setsum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .open_app_desc.ProcQ procq = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_procq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:open_app_desc.SetQuotaRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:open_app_desc.SetQuotaRsp)
  return false;
#undef DO_
}

void SetQuotaRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:open_app_desc.SetQuotaRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes setkey = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->setkey(), output);
  }

  // optional int32 setsum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->setsum(), output);
  }

  // repeated .open_app_desc.ProcQ procq = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->procq_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->procq(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:open_app_desc.SetQuotaRsp)
}

::google::protobuf::uint8* SetQuotaRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:open_app_desc.SetQuotaRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes setkey = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->setkey(), target);
  }

  // optional int32 setsum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->setsum(), target);
  }

  // repeated .open_app_desc.ProcQ procq = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->procq_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->procq(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:open_app_desc.SetQuotaRsp)
  return target;
}

size_t SetQuotaRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:open_app_desc.SetQuotaRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .open_app_desc.ProcQ procq = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->procq_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->procq(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes setkey = 1;
    if (has_setkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->setkey());
    }

    // optional int32 setsum = 2;
    if (has_setsum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->setsum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetQuotaRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:open_app_desc.SetQuotaRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetQuotaRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetQuotaRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:open_app_desc.SetQuotaRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:open_app_desc.SetQuotaRsp)
    MergeFrom(*source);
  }
}

void SetQuotaRsp::MergeFrom(const SetQuotaRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:open_app_desc.SetQuotaRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  procq_.MergeFrom(from.procq_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_setkey();
      setkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setkey_);
    }
    if (cached_has_bits & 0x00000002u) {
      setsum_ = from.setsum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetQuotaRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:open_app_desc.SetQuotaRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetQuotaRsp::CopyFrom(const SetQuotaRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:open_app_desc.SetQuotaRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetQuotaRsp::IsInitialized() const {
  return true;
}

void SetQuotaRsp::Swap(SetQuotaRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetQuotaRsp::InternalSwap(SetQuotaRsp* other) {
  using std::swap;
  procq_.InternalSwap(&other->procq_);
  setkey_.Swap(&other->setkey_);
  swap(setsum_, other->setsum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetQuotaRsp::GetMetadata() const {
  protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RealReport::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RealReport::kKeytypeFieldNumber;
const int RealReport::kKeynameFieldNumber;
const int RealReport::kTimekeyFieldNumber;
const int RealReport::kSetnameFieldNumber;
const int RealReport::kTotalFieldNumber;
const int RealReport::kRefuseFieldNumber;
const int RealReport::kSetrefuseFieldNumber;
const int RealReport::kRealFieldNumber;
const int RealReport::kQuotaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RealReport::RealReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsRealReport();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:open_app_desc.RealReport)
}
RealReport::RealReport(const RealReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  keyname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_keyname()) {
    keyname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyname_);
  }
  setname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_setname()) {
    setname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setname_);
  }
  ::memcpy(&timekey_, &from.timekey_,
    static_cast<size_t>(reinterpret_cast<char*>(&quota_) -
    reinterpret_cast<char*>(&timekey_)) + sizeof(quota_));
  // @@protoc_insertion_point(copy_constructor:open_app_desc.RealReport)
}

void RealReport::SharedCtor() {
  _cached_size_ = 0;
  keyname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  setname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timekey_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quota_) -
      reinterpret_cast<char*>(&timekey_)) + sizeof(quota_));
}

RealReport::~RealReport() {
  // @@protoc_insertion_point(destructor:open_app_desc.RealReport)
  SharedDtor();
}

void RealReport::SharedDtor() {
  keyname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  setname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RealReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RealReport::descriptor() {
  ::protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RealReport& RealReport::default_instance() {
  ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsRealReport();
  return *internal_default_instance();
}

RealReport* RealReport::New(::google::protobuf::Arena* arena) const {
  RealReport* n = new RealReport;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RealReport::Clear() {
// @@protoc_insertion_point(message_clear_start:open_app_desc.RealReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!keyname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*keyname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!setname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*setname_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&timekey_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&real_) -
        reinterpret_cast<char*>(&timekey_)) + sizeof(real_));
  }
  quota_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RealReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:open_app_desc.RealReport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 keytype = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_keytype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes keyname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_keyname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 timekey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_timekey();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timekey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes setname = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_setname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 total = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_total();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 refuse = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_refuse();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refuse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 setrefuse = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_setrefuse();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &setrefuse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 real = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_real();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &real_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 quota = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_quota();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quota_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:open_app_desc.RealReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:open_app_desc.RealReport)
  return false;
#undef DO_
}

void RealReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:open_app_desc.RealReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 keytype = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->keytype(), output);
  }

  // optional bytes keyname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->keyname(), output);
  }

  // optional int64 timekey = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->timekey(), output);
  }

  // optional bytes setname = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->setname(), output);
  }

  // optional int32 total = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->total(), output);
  }

  // optional int32 refuse = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->refuse(), output);
  }

  // optional int32 setrefuse = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->setrefuse(), output);
  }

  // optional int32 real = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->real(), output);
  }

  // optional int32 quota = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->quota(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:open_app_desc.RealReport)
}

::google::protobuf::uint8* RealReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:open_app_desc.RealReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 keytype = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->keytype(), target);
  }

  // optional bytes keyname = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->keyname(), target);
  }

  // optional int64 timekey = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->timekey(), target);
  }

  // optional bytes setname = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->setname(), target);
  }

  // optional int32 total = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->total(), target);
  }

  // optional int32 refuse = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->refuse(), target);
  }

  // optional int32 setrefuse = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->setrefuse(), target);
  }

  // optional int32 real = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->real(), target);
  }

  // optional int32 quota = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->quota(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:open_app_desc.RealReport)
  return target;
}

size_t RealReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:open_app_desc.RealReport)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes keyname = 2;
    if (has_keyname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->keyname());
    }

    // optional bytes setname = 4;
    if (has_setname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->setname());
    }

    // optional int64 timekey = 3;
    if (has_timekey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timekey());
    }

    // optional int32 keytype = 1;
    if (has_keytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->keytype());
    }

    // optional int32 total = 5;
    if (has_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total());
    }

    // optional int32 refuse = 6;
    if (has_refuse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refuse());
    }

    // optional int32 setrefuse = 7;
    if (has_setrefuse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->setrefuse());
    }

    // optional int32 real = 8;
    if (has_real()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->real());
    }

  }
  // optional int32 quota = 9;
  if (has_quota()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->quota());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RealReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:open_app_desc.RealReport)
  GOOGLE_DCHECK_NE(&from, this);
  const RealReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RealReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:open_app_desc.RealReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:open_app_desc.RealReport)
    MergeFrom(*source);
  }
}

void RealReport::MergeFrom(const RealReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:open_app_desc.RealReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_keyname();
      keyname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_setname();
      setname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setname_);
    }
    if (cached_has_bits & 0x00000004u) {
      timekey_ = from.timekey_;
    }
    if (cached_has_bits & 0x00000008u) {
      keytype_ = from.keytype_;
    }
    if (cached_has_bits & 0x00000010u) {
      total_ = from.total_;
    }
    if (cached_has_bits & 0x00000020u) {
      refuse_ = from.refuse_;
    }
    if (cached_has_bits & 0x00000040u) {
      setrefuse_ = from.setrefuse_;
    }
    if (cached_has_bits & 0x00000080u) {
      real_ = from.real_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_quota(from.quota());
  }
}

void RealReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:open_app_desc.RealReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RealReport::CopyFrom(const RealReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:open_app_desc.RealReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RealReport::IsInitialized() const {
  return true;
}

void RealReport::Swap(RealReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RealReport::InternalSwap(RealReport* other) {
  using std::swap;
  keyname_.Swap(&other->keyname_);
  setname_.Swap(&other->setname_);
  swap(timekey_, other->timekey_);
  swap(keytype_, other->keytype_);
  swap(total_, other->total_);
  swap(refuse_, other->refuse_);
  swap(setrefuse_, other->setrefuse_);
  swap(real_, other->real_);
  swap(quota_, other->quota_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RealReport::GetMetadata() const {
  protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QReport::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QReport::kActidFieldNumber;
const int QReport::kIpFieldNumber;
const int QReport::kProcidFieldNumber;
const int QReport::kTimekeyFieldNumber;
const int QReport::kSetnameFieldNumber;
const int QReport::kActquotaFieldNumber;
const int QReport::kSetquotaFieldNumber;
const int QReport::kTotalFieldNumber;
const int QReport::kRefuseFieldNumber;
const int QReport::kSetrefuseFieldNumber;
const int QReport::kRealFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QReport::QReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsQReport();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:open_app_desc.QReport)
}
QReport::QReport(const QReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  actid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_actid()) {
    actid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actid_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  setname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_setname()) {
    setname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setname_);
  }
  ::memcpy(&timekey_, &from.timekey_,
    static_cast<size_t>(reinterpret_cast<char*>(&real_) -
    reinterpret_cast<char*>(&timekey_)) + sizeof(real_));
  // @@protoc_insertion_point(copy_constructor:open_app_desc.QReport)
}

void QReport::SharedCtor() {
  _cached_size_ = 0;
  actid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  setname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timekey_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&real_) -
      reinterpret_cast<char*>(&timekey_)) + sizeof(real_));
}

QReport::~QReport() {
  // @@protoc_insertion_point(destructor:open_app_desc.QReport)
  SharedDtor();
}

void QReport::SharedDtor() {
  actid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  setname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QReport::descriptor() {
  ::protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QReport& QReport::default_instance() {
  ::protobuf_open_5fapp_5fdesc_2eproto::InitDefaultsQReport();
  return *internal_default_instance();
}

QReport* QReport::New(::google::protobuf::Arena* arena) const {
  QReport* n = new QReport;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QReport::Clear() {
// @@protoc_insertion_point(message_clear_start:open_app_desc.QReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!actid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*actid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!ip_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ip_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!setname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*setname_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&timekey_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&total_) -
        reinterpret_cast<char*>(&timekey_)) + sizeof(total_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&refuse_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&real_) -
        reinterpret_cast<char*>(&refuse_)) + sizeof(real_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:open_app_desc.QReport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes actid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_actid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 procid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_procid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &procid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 timekey = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_timekey();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timekey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes setname = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_setname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 actquota = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_actquota();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actquota_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 setquota = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_setquota();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &setquota_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 total = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_total();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 refuse = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_refuse();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refuse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 setrefuse = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_setrefuse();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &setrefuse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 real = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_real();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &real_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:open_app_desc.QReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:open_app_desc.QReport)
  return false;
#undef DO_
}

void QReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:open_app_desc.QReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes actid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->actid(), output);
  }

  // optional bytes ip = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ip(), output);
  }

  // optional int32 procid = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->procid(), output);
  }

  // optional int64 timekey = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->timekey(), output);
  }

  // optional bytes setname = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->setname(), output);
  }

  // optional int32 actquota = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->actquota(), output);
  }

  // optional int32 setquota = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->setquota(), output);
  }

  // optional int32 total = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->total(), output);
  }

  // optional int32 refuse = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->refuse(), output);
  }

  // optional int32 setrefuse = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->setrefuse(), output);
  }

  // optional int32 real = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->real(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:open_app_desc.QReport)
}

::google::protobuf::uint8* QReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:open_app_desc.QReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes actid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->actid(), target);
  }

  // optional bytes ip = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ip(), target);
  }

  // optional int32 procid = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->procid(), target);
  }

  // optional int64 timekey = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->timekey(), target);
  }

  // optional bytes setname = 5;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->setname(), target);
  }

  // optional int32 actquota = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->actquota(), target);
  }

  // optional int32 setquota = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->setquota(), target);
  }

  // optional int32 total = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->total(), target);
  }

  // optional int32 refuse = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->refuse(), target);
  }

  // optional int32 setrefuse = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->setrefuse(), target);
  }

  // optional int32 real = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->real(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:open_app_desc.QReport)
  return target;
}

size_t QReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:open_app_desc.QReport)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes actid = 1;
    if (has_actid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->actid());
    }

    // optional bytes ip = 2;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ip());
    }

    // optional bytes setname = 5;
    if (has_setname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->setname());
    }

    // optional int64 timekey = 4;
    if (has_timekey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timekey());
    }

    // optional int32 procid = 3;
    if (has_procid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->procid());
    }

    // optional int32 actquota = 6;
    if (has_actquota()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->actquota());
    }

    // optional int32 setquota = 7;
    if (has_setquota()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->setquota());
    }

    // optional int32 total = 8;
    if (has_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional int32 refuse = 9;
    if (has_refuse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refuse());
    }

    // optional int32 setrefuse = 10;
    if (has_setrefuse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->setrefuse());
    }

    // optional int32 real = 11;
    if (has_real()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->real());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:open_app_desc.QReport)
  GOOGLE_DCHECK_NE(&from, this);
  const QReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:open_app_desc.QReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:open_app_desc.QReport)
    MergeFrom(*source);
  }
}

void QReport::MergeFrom(const QReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:open_app_desc.QReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_actid();
      actid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_ip();
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_setname();
      setname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setname_);
    }
    if (cached_has_bits & 0x00000008u) {
      timekey_ = from.timekey_;
    }
    if (cached_has_bits & 0x00000010u) {
      procid_ = from.procid_;
    }
    if (cached_has_bits & 0x00000020u) {
      actquota_ = from.actquota_;
    }
    if (cached_has_bits & 0x00000040u) {
      setquota_ = from.setquota_;
    }
    if (cached_has_bits & 0x00000080u) {
      total_ = from.total_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      refuse_ = from.refuse_;
    }
    if (cached_has_bits & 0x00000200u) {
      setrefuse_ = from.setrefuse_;
    }
    if (cached_has_bits & 0x00000400u) {
      real_ = from.real_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void QReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:open_app_desc.QReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QReport::CopyFrom(const QReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:open_app_desc.QReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QReport::IsInitialized() const {
  return true;
}

void QReport::Swap(QReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QReport::InternalSwap(QReport* other) {
  using std::swap;
  actid_.Swap(&other->actid_);
  ip_.Swap(&other->ip_);
  setname_.Swap(&other->setname_);
  swap(timekey_, other->timekey_);
  swap(procid_, other->procid_);
  swap(actquota_, other->actquota_);
  swap(setquota_, other->setquota_);
  swap(total_, other->total_);
  swap(refuse_, other->refuse_);
  swap(setrefuse_, other->setrefuse_);
  swap(real_, other->real_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QReport::GetMetadata() const {
  protobuf_open_5fapp_5fdesc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_open_5fapp_5fdesc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace open_app_desc

// @@protoc_insertion_point(global_scope)
