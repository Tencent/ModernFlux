// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.5.1

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BODY_TYPE int32

const (
	BODY_TYPE_BODY_BEGIN    BODY_TYPE = 0
	BODY_TYPE_BODY_REQUEST  BODY_TYPE = 1
	BODY_TYPE_BODY_RESPONSE BODY_TYPE = 2
)

// Enum value maps for BODY_TYPE.
var (
	BODY_TYPE_name = map[int32]string{
		0: "BODY_BEGIN",
		1: "BODY_REQUEST",
		2: "BODY_RESPONSE",
	}
	BODY_TYPE_value = map[string]int32{
		"BODY_BEGIN":    0,
		"BODY_REQUEST":  1,
		"BODY_RESPONSE": 2,
	}
)

func (x BODY_TYPE) Enum() *BODY_TYPE {
	p := new(BODY_TYPE)
	*p = x
	return p
}

func (x BODY_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BODY_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_open_app_desc_proto_enumTypes[0].Descriptor()
}

func (BODY_TYPE) Type() protoreflect.EnumType {
	return &file_open_app_desc_proto_enumTypes[0]
}

func (x BODY_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BODY_TYPE.Descriptor instead.
func (BODY_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_open_app_desc_proto_rawDescGZIP(), []int{0}
}

type CmdBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeqId int64  `protobuf:"varint,1,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	CmdId int64  `protobuf:"varint,2,opt,name=cmd_id,json=cmdId,proto3" json:"cmd_id,omitempty"`
	Type  int64  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Body  []byte `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *CmdBase) Reset() {
	*x = CmdBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_app_desc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmdBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdBase) ProtoMessage() {}

func (x *CmdBase) ProtoReflect() protoreflect.Message {
	mi := &file_open_app_desc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdBase.ProtoReflect.Descriptor instead.
func (*CmdBase) Descriptor() ([]byte, []int) {
	return file_open_app_desc_proto_rawDescGZIP(), []int{0}
}

func (x *CmdBase) GetSeqId() int64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *CmdBase) GetCmdId() int64 {
	if x != nil {
		return x.CmdId
	}
	return 0
}

func (x *CmdBase) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CmdBase) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type CmdBaseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    int64  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	ErrMsg []byte `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	Resp   []byte `protobuf:"bytes,3,opt,name=resp,proto3" json:"resp,omitempty"`
}

func (x *CmdBaseResp) Reset() {
	*x = CmdBaseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_app_desc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmdBaseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdBaseResp) ProtoMessage() {}

func (x *CmdBaseResp) ProtoReflect() protoreflect.Message {
	mi := &file_open_app_desc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdBaseResp.ProtoReflect.Descriptor instead.
func (*CmdBaseResp) Descriptor() ([]byte, []int) {
	return file_open_app_desc_proto_rawDescGZIP(), []int{1}
}

func (x *CmdBaseResp) GetRet() int64 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *CmdBaseResp) GetErrMsg() []byte {
	if x != nil {
		return x.ErrMsg
	}
	return nil
}

func (x *CmdBaseResp) GetResp() []byte {
	if x != nil {
		return x.Resp
	}
	return nil
}

type L5Cfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModId             []byte `protobuf:"bytes,1,opt,name=modId,proto3" json:"modId,omitempty"`
	CmdId             []byte `protobuf:"bytes,2,opt,name=cmdId,proto3" json:"cmdId,omitempty"`
	DefaultIp         []byte `protobuf:"bytes,3,opt,name=defaultIp,proto3" json:"defaultIp,omitempty"`
	DefaultPort       int64  `protobuf:"varint,4,opt,name=defaultPort,proto3" json:"defaultPort,omitempty"`
	GlobalDefaultIp   []byte `protobuf:"bytes,5,opt,name=globalDefaultIp,proto3" json:"globalDefaultIp,omitempty"`
	GlobalDefaultPort int64  `protobuf:"varint,6,opt,name=globalDefaultPort,proto3" json:"globalDefaultPort,omitempty"`
}

func (x *L5Cfg) Reset() {
	*x = L5Cfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_app_desc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *L5Cfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*L5Cfg) ProtoMessage() {}

func (x *L5Cfg) ProtoReflect() protoreflect.Message {
	mi := &file_open_app_desc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use L5Cfg.ProtoReflect.Descriptor instead.
func (*L5Cfg) Descriptor() ([]byte, []int) {
	return file_open_app_desc_proto_rawDescGZIP(), []int{2}
}

func (x *L5Cfg) GetModId() []byte {
	if x != nil {
		return x.ModId
	}
	return nil
}

func (x *L5Cfg) GetCmdId() []byte {
	if x != nil {
		return x.CmdId
	}
	return nil
}

func (x *L5Cfg) GetDefaultIp() []byte {
	if x != nil {
		return x.DefaultIp
	}
	return nil
}

func (x *L5Cfg) GetDefaultPort() int64 {
	if x != nil {
		return x.DefaultPort
	}
	return 0
}

func (x *L5Cfg) GetGlobalDefaultIp() []byte {
	if x != nil {
		return x.GlobalDefaultIp
	}
	return nil
}

func (x *L5Cfg) GetGlobalDefaultPort() int64 {
	if x != nil {
		return x.GlobalDefaultPort
	}
	return 0
}

type Flux struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flowswitch      uint32 `protobuf:"varint,1,opt,name=flowswitch,proto3" json:"flowswitch,omitempty"`
	Queryrate       uint32 `protobuf:"varint,2,opt,name=queryrate,proto3" json:"queryrate,omitempty"`
	Attendrate      uint32 `protobuf:"varint,3,opt,name=attendrate,proto3" json:"attendrate,omitempty"`
	Queryid         uint32 `protobuf:"varint,4,opt,name=queryid,proto3" json:"queryid,omitempty"`
	Attendid        uint32 `protobuf:"varint,5,opt,name=attendid,proto3" json:"attendid,omitempty"`
	Totalflowid     uint32 `protobuf:"varint,6,opt,name=totalflowid,proto3" json:"totalflowid,omitempty"`
	Queryquota      uint32 `protobuf:"varint,7,opt,name=queryquota,proto3" json:"queryquota,omitempty"`
	Attendquota     uint32 `protobuf:"varint,8,opt,name=attendquota,proto3" json:"attendquota,omitempty"`
	Referkey        []byte `protobuf:"bytes,9,opt,name=referkey,proto3" json:"referkey,omitempty"`
	Winlen          uint32 `protobuf:"varint,10,opt,name=winlen,proto3" json:"winlen,omitempty"`
	Errnum          uint32 `protobuf:"varint,11,opt,name=errnum,proto3" json:"errnum,omitempty"`
	Errnumrate      uint32 `protobuf:"varint,12,opt,name=errnumrate,proto3" json:"errnumrate,omitempty"`
	Cpurate         uint32 `protobuf:"varint,13,opt,name=cpurate,proto3" json:"cpurate,omitempty"`
	Cpuinterval     uint32 `protobuf:"varint,14,opt,name=cpuinterval,proto3" json:"cpuinterval,omitempty"`
	Memrate         uint32 `protobuf:"varint,15,opt,name=memrate,proto3" json:"memrate,omitempty"`
	Queryquovaryid  uint32 `protobuf:"varint,16,opt,name=queryquovaryid,proto3" json:"queryquovaryid,omitempty"`
	Attendquovaryid uint32 `protobuf:"varint,17,opt,name=attendquovaryid,proto3" json:"attendquovaryid,omitempty"`
	Normalenv       *L5Cfg `protobuf:"bytes,18,opt,name=normalenv,proto3" json:"normalenv,omitempty"`
	Testenv         *L5Cfg `protobuf:"bytes,19,opt,name=testenv,proto3" json:"testenv,omitempty"`
	Type            uint32 `protobuf:"varint,20,opt,name=type,proto3" json:"type,omitempty"` // 1:effective 2:accurate
}

func (x *Flux) Reset() {
	*x = Flux{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_app_desc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Flux) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flux) ProtoMessage() {}

func (x *Flux) ProtoReflect() protoreflect.Message {
	mi := &file_open_app_desc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flux.ProtoReflect.Descriptor instead.
func (*Flux) Descriptor() ([]byte, []int) {
	return file_open_app_desc_proto_rawDescGZIP(), []int{3}
}

func (x *Flux) GetFlowswitch() uint32 {
	if x != nil {
		return x.Flowswitch
	}
	return 0
}

func (x *Flux) GetQueryrate() uint32 {
	if x != nil {
		return x.Queryrate
	}
	return 0
}

func (x *Flux) GetAttendrate() uint32 {
	if x != nil {
		return x.Attendrate
	}
	return 0
}

func (x *Flux) GetQueryid() uint32 {
	if x != nil {
		return x.Queryid
	}
	return 0
}

func (x *Flux) GetAttendid() uint32 {
	if x != nil {
		return x.Attendid
	}
	return 0
}

func (x *Flux) GetTotalflowid() uint32 {
	if x != nil {
		return x.Totalflowid
	}
	return 0
}

func (x *Flux) GetQueryquota() uint32 {
	if x != nil {
		return x.Queryquota
	}
	return 0
}

func (x *Flux) GetAttendquota() uint32 {
	if x != nil {
		return x.Attendquota
	}
	return 0
}

func (x *Flux) GetReferkey() []byte {
	if x != nil {
		return x.Referkey
	}
	return nil
}

func (x *Flux) GetWinlen() uint32 {
	if x != nil {
		return x.Winlen
	}
	return 0
}

func (x *Flux) GetErrnum() uint32 {
	if x != nil {
		return x.Errnum
	}
	return 0
}

func (x *Flux) GetErrnumrate() uint32 {
	if x != nil {
		return x.Errnumrate
	}
	return 0
}

func (x *Flux) GetCpurate() uint32 {
	if x != nil {
		return x.Cpurate
	}
	return 0
}

func (x *Flux) GetCpuinterval() uint32 {
	if x != nil {
		return x.Cpuinterval
	}
	return 0
}

func (x *Flux) GetMemrate() uint32 {
	if x != nil {
		return x.Memrate
	}
	return 0
}

func (x *Flux) GetQueryquovaryid() uint32 {
	if x != nil {
		return x.Queryquovaryid
	}
	return 0
}

func (x *Flux) GetAttendquovaryid() uint32 {
	if x != nil {
		return x.Attendquovaryid
	}
	return 0
}

func (x *Flux) GetNormalenv() *L5Cfg {
	if x != nil {
		return x.Normalenv
	}
	return nil
}

func (x *Flux) GetTestenv() *L5Cfg {
	if x != nil {
		return x.Testenv
	}
	return nil
}

func (x *Flux) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// quota
type ReportItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timekey   int64 `protobuf:"varint,1,opt,name=timekey,proto3" json:"timekey,omitempty"`
	Reportnum int64 `protobuf:"varint,2,opt,name=reportnum,proto3" json:"reportnum,omitempty"`
	Refuse    int64 `protobuf:"varint,3,opt,name=refuse,proto3" json:"refuse,omitempty"`
	Setrefuse int64 `protobuf:"varint,4,opt,name=setrefuse,proto3" json:"setrefuse,omitempty"`
}

func (x *ReportItem) Reset() {
	*x = ReportItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_app_desc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportItem) ProtoMessage() {}

func (x *ReportItem) ProtoReflect() protoreflect.Message {
	mi := &file_open_app_desc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportItem.ProtoReflect.Descriptor instead.
func (*ReportItem) Descriptor() ([]byte, []int) {
	return file_open_app_desc_proto_rawDescGZIP(), []int{4}
}

func (x *ReportItem) GetTimekey() int64 {
	if x != nil {
		return x.Timekey
	}
	return 0
}

func (x *ReportItem) GetReportnum() int64 {
	if x != nil {
		return x.Reportnum
	}
	return 0
}

func (x *ReportItem) GetRefuse() int64 {
	if x != nil {
		return x.Refuse
	}
	return 0
}

func (x *ReportItem) GetSetrefuse() int64 {
	if x != nil {
		return x.Setrefuse
	}
	return 0
}

type QuotaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        []byte        `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"` // quote key: act, instanceid
	Referkey   []byte        `protobuf:"bytes,2,opt,name=referkey,proto3" json:"referkey,omitempty"`
	Reportitem []*ReportItem `protobuf:"bytes,3,rep,name=reportitem,proto3" json:"reportitem,omitempty"`
	Localquota int32         `protobuf:"varint,4,opt,name=localquota,proto3" json:"localquota,omitempty"` //
	Id         int32         `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`                 // process group id
	Serial     []byte        `protobuf:"bytes,6,opt,name=serial,proto3" json:"serial,omitempty"`          //
	Totalquota int32         `protobuf:"varint,7,opt,name=totalquota,proto3" json:"totalquota,omitempty"` // key total quota
	Openid     []byte        `protobuf:"bytes,8,opt,name=openid,proto3" json:"openid,omitempty"`
	Uin        int64         `protobuf:"varint,9,opt,name=uin,proto3" json:"uin,omitempty"`
	Nowsum     int64         `protobuf:"varint,10,opt,name=nowsum,proto3" json:"nowsum,omitempty"` // percent seconds
	Workernum  int64         `protobuf:"varint,11,opt,name=workernum,proto3" json:"workernum,omitempty"`
	Setkey     []byte        `protobuf:"bytes,12,opt,name=setkey,proto3" json:"setkey,omitempty"`
	Business   []byte        `protobuf:"bytes,13,opt,name=business,proto3" json:"business,omitempty"` //
	Setenv     []byte        `protobuf:"bytes,14,opt,name=setenv,proto3" json:"setenv,omitempty"`     //
}

func (x *QuotaReq) Reset() {
	*x = QuotaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_app_desc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuotaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuotaReq) ProtoMessage() {}

func (x *QuotaReq) ProtoReflect() protoreflect.Message {
	mi := &file_open_app_desc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuotaReq.ProtoReflect.Descriptor instead.
func (*QuotaReq) Descriptor() ([]byte, []int) {
	return file_open_app_desc_proto_rawDescGZIP(), []int{5}
}

func (x *QuotaReq) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *QuotaReq) GetReferkey() []byte {
	if x != nil {
		return x.Referkey
	}
	return nil
}

func (x *QuotaReq) GetReportitem() []*ReportItem {
	if x != nil {
		return x.Reportitem
	}
	return nil
}

func (x *QuotaReq) GetLocalquota() int32 {
	if x != nil {
		return x.Localquota
	}
	return 0
}

func (x *QuotaReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QuotaReq) GetSerial() []byte {
	if x != nil {
		return x.Serial
	}
	return nil
}

func (x *QuotaReq) GetTotalquota() int32 {
	if x != nil {
		return x.Totalquota
	}
	return 0
}

func (x *QuotaReq) GetOpenid() []byte {
	if x != nil {
		return x.Openid
	}
	return nil
}

func (x *QuotaReq) GetUin() int64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *QuotaReq) GetNowsum() int64 {
	if x != nil {
		return x.Nowsum
	}
	return 0
}

func (x *QuotaReq) GetWorkernum() int64 {
	if x != nil {
		return x.Workernum
	}
	return 0
}

func (x *QuotaReq) GetSetkey() []byte {
	if x != nil {
		return x.Setkey
	}
	return nil
}

func (x *QuotaReq) GetBusiness() []byte {
	if x != nil {
		return x.Business
	}
	return nil
}

func (x *QuotaReq) GetSetenv() []byte {
	if x != nil {
		return x.Setenv
	}
	return nil
}

type QuotaRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key            []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Localq         int64  `protobuf:"varint,2,opt,name=localq,proto3" json:"localq,omitempty"` // totalq*(self)/total
	Totalq         int64  `protobuf:"varint,3,opt,name=totalq,proto3" json:"totalq,omitempty"`
	Partnernum     int32  `protobuf:"varint,4,opt,name=partnernum,proto3" json:"partnernum,omitempty"`
	Serial         []byte `protobuf:"bytes,5,opt,name=serial,proto3" json:"serial,omitempty"` //
	Ipnum          int32  `protobuf:"varint,6,opt,name=ipnum,proto3" json:"ipnum,omitempty"`
	Alloctype      int32  `protobuf:"varint,7,opt,name=alloctype,proto3" json:"alloctype,omitempty"`            // 0:undo 1:average 2:dynamic 3:heart beat reset
	Allocpartnum   int32  `protobuf:"varint,8,opt,name=allocpartnum,proto3" json:"allocpartnum,omitempty"`      //
	Alloctime      int64  `protobuf:"varint,9,opt,name=alloctime,proto3" json:"alloctime,omitempty"`            //
	Self           int64  `protobuf:"varint,10,opt,name=self,proto3" json:"self,omitempty"`                     //
	Total          int64  `protobuf:"varint,11,opt,name=total,proto3" json:"total,omitempty"`                   //
	Nowsum         int64  `protobuf:"varint,12,opt,name=nowsum,proto3" json:"nowsum,omitempty"`                 //
	Totalworkernum int64  `protobuf:"varint,13,opt,name=totalworkernum,proto3" json:"totalworkernum,omitempty"` //
	Setquota       int32  `protobuf:"varint,14,opt,name=setquota,proto3" json:"setquota,omitempty"`             //
	Setsum         int32  `protobuf:"varint,15,opt,name=setsum,proto3" json:"setsum,omitempty"`                 //
	Procquota      int32  `protobuf:"varint,16,opt,name=procquota,proto3" json:"procquota,omitempty"`           //
}

func (x *QuotaRsp) Reset() {
	*x = QuotaRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_app_desc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuotaRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuotaRsp) ProtoMessage() {}

func (x *QuotaRsp) ProtoReflect() protoreflect.Message {
	mi := &file_open_app_desc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuotaRsp.ProtoReflect.Descriptor instead.
func (*QuotaRsp) Descriptor() ([]byte, []int) {
	return file_open_app_desc_proto_rawDescGZIP(), []int{6}
}

func (x *QuotaRsp) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *QuotaRsp) GetLocalq() int64 {
	if x != nil {
		return x.Localq
	}
	return 0
}

func (x *QuotaRsp) GetTotalq() int64 {
	if x != nil {
		return x.Totalq
	}
	return 0
}

func (x *QuotaRsp) GetPartnernum() int32 {
	if x != nil {
		return x.Partnernum
	}
	return 0
}

func (x *QuotaRsp) GetSerial() []byte {
	if x != nil {
		return x.Serial
	}
	return nil
}

func (x *QuotaRsp) GetIpnum() int32 {
	if x != nil {
		return x.Ipnum
	}
	return 0
}

func (x *QuotaRsp) GetAlloctype() int32 {
	if x != nil {
		return x.Alloctype
	}
	return 0
}

func (x *QuotaRsp) GetAllocpartnum() int32 {
	if x != nil {
		return x.Allocpartnum
	}
	return 0
}

func (x *QuotaRsp) GetAlloctime() int64 {
	if x != nil {
		return x.Alloctime
	}
	return 0
}

func (x *QuotaRsp) GetSelf() int64 {
	if x != nil {
		return x.Self
	}
	return 0
}

func (x *QuotaRsp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QuotaRsp) GetNowsum() int64 {
	if x != nil {
		return x.Nowsum
	}
	return 0
}

func (x *QuotaRsp) GetTotalworkernum() int64 {
	if x != nil {
		return x.Totalworkernum
	}
	return 0
}

func (x *QuotaRsp) GetSetquota() int32 {
	if x != nil {
		return x.Setquota
	}
	return 0
}

func (x *QuotaRsp) GetSetsum() int32 {
	if x != nil {
		return x.Setsum
	}
	return 0
}

func (x *QuotaRsp) GetProcquota() int32 {
	if x != nil {
		return x.Procquota
	}
	return 0
}

// machine config
type SetItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Setkey      []byte   `protobuf:"bytes,1,opt,name=setkey,proto3" json:"setkey,omitempty"`
	Setquota    int32    `protobuf:"varint,2,opt,name=setquota,proto3" json:"setquota,omitempty"`
	Iplist      [][]byte `protobuf:"bytes,3,rep,name=iplist,proto3" json:"iplist,omitempty"`
	Feaid       int32    `protobuf:"varint,4,opt,name=feaid,proto3" json:"feaid,omitempty"`
	Refuseid    int32    `protobuf:"varint,5,opt,name=refuseid,proto3" json:"refuseid,omitempty"`
	Setrefuseid int32    `protobuf:"varint,6,opt,name=setrefuseid,proto3" json:"setrefuseid,omitempty"`
	Realid      int32    `protobuf:"varint,7,opt,name=realid,proto3" json:"realid,omitempty"`
}

func (x *SetItem) Reset() {
	*x = SetItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_app_desc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetItem) ProtoMessage() {}

func (x *SetItem) ProtoReflect() protoreflect.Message {
	mi := &file_open_app_desc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetItem.ProtoReflect.Descriptor instead.
func (*SetItem) Descriptor() ([]byte, []int) {
	return file_open_app_desc_proto_rawDescGZIP(), []int{7}
}

func (x *SetItem) GetSetkey() []byte {
	if x != nil {
		return x.Setkey
	}
	return nil
}

func (x *SetItem) GetSetquota() int32 {
	if x != nil {
		return x.Setquota
	}
	return 0
}

func (x *SetItem) GetIplist() [][]byte {
	if x != nil {
		return x.Iplist
	}
	return nil
}

func (x *SetItem) GetFeaid() int32 {
	if x != nil {
		return x.Feaid
	}
	return 0
}

func (x *SetItem) GetRefuseid() int32 {
	if x != nil {
		return x.Refuseid
	}
	return 0
}

func (x *SetItem) GetSetrefuseid() int32 {
	if x != nil {
		return x.Setrefuseid
	}
	return 0
}

func (x *SetItem) GetRealid() int32 {
	if x != nil {
		return x.Realid
	}
	return 0
}

type SetMacInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Itemlist []*SetItem `protobuf:"bytes,1,rep,name=itemlist,proto3" json:"itemlist,omitempty"` //
}

func (x *SetMacInfo) Reset() {
	*x = SetMacInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_app_desc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMacInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMacInfo) ProtoMessage() {}

func (x *SetMacInfo) ProtoReflect() protoreflect.Message {
	mi := &file_open_app_desc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMacInfo.ProtoReflect.Descriptor instead.
func (*SetMacInfo) Descriptor() ([]byte, []int) {
	return file_open_app_desc_proto_rawDescGZIP(), []int{8}
}

func (x *SetMacInfo) GetItemlist() []*SetItem {
	if x != nil {
		return x.Itemlist
	}
	return nil
}

type SetFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fpath []byte   `protobuf:"bytes,1,opt,name=fpath,proto3" json:"fpath,omitempty"`
	Fname [][]byte `protobuf:"bytes,2,rep,name=fname,proto3" json:"fname,omitempty"`
}

func (x *SetFileInfo) Reset() {
	*x = SetFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_app_desc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFileInfo) ProtoMessage() {}

func (x *SetFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_open_app_desc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFileInfo.ProtoReflect.Descriptor instead.
func (*SetFileInfo) Descriptor() ([]byte, []int) {
	return file_open_app_desc_proto_rawDescGZIP(), []int{9}
}

func (x *SetFileInfo) GetFpath() []byte {
	if x != nil {
		return x.Fpath
	}
	return nil
}

func (x *SetFileInfo) GetFname() [][]byte {
	if x != nil {
		return x.Fname
	}
	return nil
}

// to second aquota
type ProcReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Procid   []byte        `protobuf:"bytes,1,opt,name=procid,proto3" json:"procid,omitempty"` //
	Proclist []*ReportItem `protobuf:"bytes,2,rep,name=proclist,proto3" json:"proclist,omitempty"`
	Setkey   []byte        `protobuf:"bytes,3,opt,name=setkey,proto3" json:"setkey,omitempty"`
}

func (x *ProcReport) Reset() {
	*x = ProcReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_app_desc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcReport) ProtoMessage() {}

func (x *ProcReport) ProtoReflect() protoreflect.Message {
	mi := &file_open_app_desc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcReport.ProtoReflect.Descriptor instead.
func (*ProcReport) Descriptor() ([]byte, []int) {
	return file_open_app_desc_proto_rawDescGZIP(), []int{10}
}

func (x *ProcReport) GetProcid() []byte {
	if x != nil {
		return x.Procid
	}
	return nil
}

func (x *ProcReport) GetProclist() []*ReportItem {
	if x != nil {
		return x.Proclist
	}
	return nil
}

func (x *ProcReport) GetSetkey() []byte {
	if x != nil {
		return x.Setkey
	}
	return nil
}

type SetQuotaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Setkey    []byte        `protobuf:"bytes,1,opt,name=setkey,proto3" json:"setkey,omitempty"`
	Itemlist  []*ReportItem `protobuf:"bytes,2,rep,name=itemlist,proto3" json:"itemlist,omitempty"`
	Workernum int32         `protobuf:"varint,3,opt,name=workernum,proto3" json:"workernum,omitempty"`
	Id        int32         `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"` // spp group id
	Procitem  []*ProcReport `protobuf:"bytes,5,rep,name=procitem,proto3" json:"procitem,omitempty"`
}

func (x *SetQuotaReq) Reset() {
	*x = SetQuotaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_app_desc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetQuotaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetQuotaReq) ProtoMessage() {}

func (x *SetQuotaReq) ProtoReflect() protoreflect.Message {
	mi := &file_open_app_desc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetQuotaReq.ProtoReflect.Descriptor instead.
func (*SetQuotaReq) Descriptor() ([]byte, []int) {
	return file_open_app_desc_proto_rawDescGZIP(), []int{11}
}

func (x *SetQuotaReq) GetSetkey() []byte {
	if x != nil {
		return x.Setkey
	}
	return nil
}

func (x *SetQuotaReq) GetItemlist() []*ReportItem {
	if x != nil {
		return x.Itemlist
	}
	return nil
}

func (x *SetQuotaReq) GetWorkernum() int32 {
	if x != nil {
		return x.Workernum
	}
	return 0
}

func (x *SetQuotaReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetQuotaReq) GetProcitem() []*ProcReport {
	if x != nil {
		return x.Procitem
	}
	return nil
}

type ProcQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Procid    []byte `protobuf:"bytes,1,opt,name=procid,proto3" json:"procid,omitempty"`
	Procquota int32  `protobuf:"varint,2,opt,name=procquota,proto3" json:"procquota,omitempty"` //
}

func (x *ProcQ) Reset() {
	*x = ProcQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_app_desc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcQ) ProtoMessage() {}

func (x *ProcQ) ProtoReflect() protoreflect.Message {
	mi := &file_open_app_desc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcQ.ProtoReflect.Descriptor instead.
func (*ProcQ) Descriptor() ([]byte, []int) {
	return file_open_app_desc_proto_rawDescGZIP(), []int{12}
}

func (x *ProcQ) GetProcid() []byte {
	if x != nil {
		return x.Procid
	}
	return nil
}

func (x *ProcQ) GetProcquota() int32 {
	if x != nil {
		return x.Procquota
	}
	return 0
}

type SetQuotaRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Setkey []byte   `protobuf:"bytes,1,opt,name=setkey,proto3" json:"setkey,omitempty"`
	Setsum int32    `protobuf:"varint,2,opt,name=setsum,proto3" json:"setsum,omitempty"` //
	Procq  []*ProcQ `protobuf:"bytes,3,rep,name=procq,proto3" json:"procq,omitempty"`    //
}

func (x *SetQuotaRsp) Reset() {
	*x = SetQuotaRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_app_desc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetQuotaRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetQuotaRsp) ProtoMessage() {}

func (x *SetQuotaRsp) ProtoReflect() protoreflect.Message {
	mi := &file_open_app_desc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetQuotaRsp.ProtoReflect.Descriptor instead.
func (*SetQuotaRsp) Descriptor() ([]byte, []int) {
	return file_open_app_desc_proto_rawDescGZIP(), []int{13}
}

func (x *SetQuotaRsp) GetSetkey() []byte {
	if x != nil {
		return x.Setkey
	}
	return nil
}

func (x *SetQuotaRsp) GetSetsum() int32 {
	if x != nil {
		return x.Setsum
	}
	return 0
}

func (x *SetQuotaRsp) GetProcq() []*ProcQ {
	if x != nil {
		return x.Procq
	}
	return nil
}

// active/ip/set report
type RealReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keytype   int32  `protobuf:"varint,1,opt,name=keytype,proto3" json:"keytype,omitempty"` // 1:key 2: machine 3: SET
	Keyname   []byte `protobuf:"bytes,2,opt,name=keyname,proto3" json:"keyname,omitempty"`
	Timekey   int64  `protobuf:"varint,3,opt,name=timekey,proto3" json:"timekey,omitempty"`
	Setname   []byte `protobuf:"bytes,4,opt,name=setname,proto3" json:"setname,omitempty"`
	Total     int32  `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	Refuse    int32  `protobuf:"varint,6,opt,name=refuse,proto3" json:"refuse,omitempty"`
	Setrefuse int32  `protobuf:"varint,7,opt,name=setrefuse,proto3" json:"setrefuse,omitempty"`
	Real      int32  `protobuf:"varint,8,opt,name=real,proto3" json:"real,omitempty"`
	Quota     int32  `protobuf:"varint,9,opt,name=quota,proto3" json:"quota,omitempty"`
}

func (x *RealReport) Reset() {
	*x = RealReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_app_desc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RealReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealReport) ProtoMessage() {}

func (x *RealReport) ProtoReflect() protoreflect.Message {
	mi := &file_open_app_desc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealReport.ProtoReflect.Descriptor instead.
func (*RealReport) Descriptor() ([]byte, []int) {
	return file_open_app_desc_proto_rawDescGZIP(), []int{14}
}

func (x *RealReport) GetKeytype() int32 {
	if x != nil {
		return x.Keytype
	}
	return 0
}

func (x *RealReport) GetKeyname() []byte {
	if x != nil {
		return x.Keyname
	}
	return nil
}

func (x *RealReport) GetTimekey() int64 {
	if x != nil {
		return x.Timekey
	}
	return 0
}

func (x *RealReport) GetSetname() []byte {
	if x != nil {
		return x.Setname
	}
	return nil
}

func (x *RealReport) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RealReport) GetRefuse() int32 {
	if x != nil {
		return x.Refuse
	}
	return 0
}

func (x *RealReport) GetSetrefuse() int32 {
	if x != nil {
		return x.Setrefuse
	}
	return 0
}

func (x *RealReport) GetReal() int32 {
	if x != nil {
		return x.Real
	}
	return 0
}

func (x *RealReport) GetQuota() int32 {
	if x != nil {
		return x.Quota
	}
	return 0
}

type QReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actid     []byte `protobuf:"bytes,1,opt,name=actid,proto3" json:"actid,omitempty"` // 1:
	Ip        []byte `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Procid    int32  `protobuf:"varint,3,opt,name=procid,proto3" json:"procid,omitempty"`
	Timekey   int64  `protobuf:"varint,4,opt,name=timekey,proto3" json:"timekey,omitempty"`
	Setname   []byte `protobuf:"bytes,5,opt,name=setname,proto3" json:"setname,omitempty"`
	Actquota  int32  `protobuf:"varint,6,opt,name=actquota,proto3" json:"actquota,omitempty"`
	Setquota  int32  `protobuf:"varint,7,opt,name=setquota,proto3" json:"setquota,omitempty"`
	Total     int32  `protobuf:"varint,8,opt,name=total,proto3" json:"total,omitempty"`
	Refuse    int32  `protobuf:"varint,9,opt,name=refuse,proto3" json:"refuse,omitempty"`
	Setrefuse int32  `protobuf:"varint,10,opt,name=setrefuse,proto3" json:"setrefuse,omitempty"`
	Real      int32  `protobuf:"varint,11,opt,name=real,proto3" json:"real,omitempty"`
}

func (x *QReport) Reset() {
	*x = QReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_app_desc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QReport) ProtoMessage() {}

func (x *QReport) ProtoReflect() protoreflect.Message {
	mi := &file_open_app_desc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QReport.ProtoReflect.Descriptor instead.
func (*QReport) Descriptor() ([]byte, []int) {
	return file_open_app_desc_proto_rawDescGZIP(), []int{15}
}

func (x *QReport) GetActid() []byte {
	if x != nil {
		return x.Actid
	}
	return nil
}

func (x *QReport) GetIp() []byte {
	if x != nil {
		return x.Ip
	}
	return nil
}

func (x *QReport) GetProcid() int32 {
	if x != nil {
		return x.Procid
	}
	return 0
}

func (x *QReport) GetTimekey() int64 {
	if x != nil {
		return x.Timekey
	}
	return 0
}

func (x *QReport) GetSetname() []byte {
	if x != nil {
		return x.Setname
	}
	return nil
}

func (x *QReport) GetActquota() int32 {
	if x != nil {
		return x.Actquota
	}
	return 0
}

func (x *QReport) GetSetquota() int32 {
	if x != nil {
		return x.Setquota
	}
	return 0
}

func (x *QReport) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QReport) GetRefuse() int32 {
	if x != nil {
		return x.Refuse
	}
	return 0
}

func (x *QReport) GetSetrefuse() int32 {
	if x != nil {
		return x.Setrefuse
	}
	return 0
}

func (x *QReport) GetReal() int32 {
	if x != nil {
		return x.Real
	}
	return 0
}

var File_open_app_desc_proto protoreflect.FileDescriptor

var file_open_app_desc_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x22, 0x5f, 0x0a, 0x07, 0x43, 0x6d, 0x64, 0x42, 0x61, 0x73, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x4c, 0x0a, 0x0b, 0x43, 0x6d, 0x64, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x72,
	0x65, 0x73, 0x70, 0x22, 0xcb, 0x01, 0x0a, 0x05, 0x4c, 0x35, 0x63, 0x66, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x6f, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6d, 0x6f,
	0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x63, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x49, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x49, 0x70, 0x12, 0x2c, 0x0a, 0x11, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x22, 0x8a, 0x05, 0x0a, 0x04, 0x46, 0x6c, 0x75, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6c,
	0x6f, 0x77, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x66, 0x6c, 0x6f, 0x77, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x65,
	0x6e, 0x64, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x65, 0x6e, 0x64, 0x72, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x66, 0x6c, 0x6f, 0x77, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x66, 0x6c, 0x6f, 0x77, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x6b, 0x65, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x6b, 0x65, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x69, 0x6e, 0x6c, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x77, 0x69, 0x6e, 0x6c, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6e, 0x75, 0x6d,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6e, 0x75, 0x6d, 0x12, 0x1e,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6e, 0x75, 0x6d, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x6e, 0x75, 0x6d, 0x72, 0x61, 0x74, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x70, 0x75, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x63, 0x70, 0x75, 0x72, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x70, 0x75, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63,
	0x70, 0x75, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x6d, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x65, 0x6d,
	0x72, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x71, 0x75, 0x6f,
	0x76, 0x61, 0x72, 0x79, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x71, 0x75, 0x6f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f,
	0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x71, 0x75, 0x6f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x64, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x71, 0x75, 0x6f,
	0x76, 0x61, 0x72, 0x79, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x09, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x65, 0x6e, 0x76, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x5f, 0x61, 0x70, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x2e, 0x4c, 0x35, 0x63, 0x66, 0x67, 0x52,
	0x09, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x65, 0x6e, 0x76, 0x12, 0x2e, 0x0a, 0x07, 0x74, 0x65,
	0x73, 0x74, 0x65, 0x6e, 0x76, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x2e, 0x4c, 0x35, 0x63, 0x66,
	0x67, 0x52, 0x07, 0x74, 0x65, 0x73, 0x74, 0x65, 0x6e, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x7a,
	0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x74, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x65, 0x74, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x22, 0x87, 0x03, 0x0a, 0x08, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x5f, 0x61, 0x70, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x74, 0x65, 0x6d,
	0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x77, 0x73, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6e, 0x6f, 0x77, 0x73, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x6e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x74, 0x6b,
	0x65, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x65, 0x74, 0x6b, 0x65, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x74, 0x65, 0x6e, 0x76, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x65,
	0x74, 0x65, 0x6e, 0x76, 0x22, 0xb6, 0x03, 0x0a, 0x08, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x73,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x71, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x6e, 0x75,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x70, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x70, 0x6e, 0x75,
	0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x75, 0x6d, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x65, 0x6c, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x6f, 0x77, 0x73, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x6f, 0x77,
	0x73, 0x75, 0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x6e, 0x75, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x6e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x74, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73,
	0x65, 0x74, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x74, 0x73, 0x75,
	0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x74, 0x73, 0x75, 0x6d, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x22, 0xc1, 0x01,
	0x0a, 0x07, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x74,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x65, 0x74, 0x6b, 0x65,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x74, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x70, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x69,
	0x70, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x65, 0x61, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x65, 0x61, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x66, 0x75, 0x73, 0x65, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72,
	0x65, 0x66, 0x75, 0x73, 0x65, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x72, 0x65,
	0x66, 0x75, 0x73, 0x65, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65,
	0x74, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x6c, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x61, 0x6c, 0x69,
	0x64, 0x22, 0x40, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x32, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x39, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x66, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x66, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x73,
	0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x72, 0x6f, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x72,
	0x6f, 0x63, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x63, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x61, 0x70,
	0x70, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x63, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x74, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x65, 0x74,
	0x6b, 0x65, 0x79, 0x22, 0xc1, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x74, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x65, 0x74, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x08, 0x69,
	0x74, 0x65, 0x6d, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x6e, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x6e, 0x75, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x35, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x63, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x63, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x3d, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x63, 0x51,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x70, 0x72, 0x6f, 0x63, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x63, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x22, 0x69, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x74, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x65, 0x74, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x74, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x65, 0x74, 0x73, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x63, 0x71, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x51, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x63,
	0x71, 0x22, 0xea, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65,
	0x79, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6b, 0x65, 0x79,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6b, 0x65, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x65, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x73, 0x65, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x74, 0x72, 0x65, 0x66,
	0x75, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x74, 0x72, 0x65,
	0x66, 0x75, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x72, 0x65, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x22, 0x93,
	0x02, 0x0a, 0x07, 0x51, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63,
	0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x61, 0x63, 0x74, 0x69, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x70, 0x72, 0x6f, 0x63, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6b,
	0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x65, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x63, 0x74, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x61, 0x63, 0x74, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x74, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x66, 0x75, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x66, 0x75,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x74, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x74, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x72, 0x65, 0x61, 0x6c, 0x2a, 0x40, 0x0a, 0x09, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x10,
	0x00, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x10, 0x02, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_open_app_desc_proto_rawDescOnce sync.Once
	file_open_app_desc_proto_rawDescData = file_open_app_desc_proto_rawDesc
)

func file_open_app_desc_proto_rawDescGZIP() []byte {
	file_open_app_desc_proto_rawDescOnce.Do(func() {
		file_open_app_desc_proto_rawDescData = protoimpl.X.CompressGZIP(file_open_app_desc_proto_rawDescData)
	})
	return file_open_app_desc_proto_rawDescData
}

var file_open_app_desc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_open_app_desc_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_open_app_desc_proto_goTypes = []interface{}{
	(BODY_TYPE)(0),      // 0: open_app_desc.BODY_TYPE
	(*CmdBase)(nil),     // 1: open_app_desc.CmdBase
	(*CmdBaseResp)(nil), // 2: open_app_desc.CmdBaseResp
	(*L5Cfg)(nil),       // 3: open_app_desc.L5cfg
	(*Flux)(nil),        // 4: open_app_desc.Flux
	(*ReportItem)(nil),  // 5: open_app_desc.ReportItem
	(*QuotaReq)(nil),    // 6: open_app_desc.QuotaReq
	(*QuotaRsp)(nil),    // 7: open_app_desc.QuotaRsp
	(*SetItem)(nil),     // 8: open_app_desc.SetItem
	(*SetMacInfo)(nil),  // 9: open_app_desc.SetMacInfo
	(*SetFileInfo)(nil), // 10: open_app_desc.SetFileInfo
	(*ProcReport)(nil),  // 11: open_app_desc.ProcReport
	(*SetQuotaReq)(nil), // 12: open_app_desc.SetQuotaReq
	(*ProcQ)(nil),       // 13: open_app_desc.ProcQ
	(*SetQuotaRsp)(nil), // 14: open_app_desc.SetQuotaRsp
	(*RealReport)(nil),  // 15: open_app_desc.RealReport
	(*QReport)(nil),     // 16: open_app_desc.QReport
}
var file_open_app_desc_proto_depIdxs = []int32{
	3,  // 0: open_app_desc.Flux.normalenv:type_name -> open_app_desc.L5cfg
	3,  // 1: open_app_desc.Flux.testenv:type_name -> open_app_desc.L5cfg
	5,  // 2: open_app_desc.QuotaReq.reportitem:type_name -> open_app_desc.ReportItem
	8,  // 3: open_app_desc.SetMacInfo.itemlist:type_name -> open_app_desc.SetItem
	5,  // 4: open_app_desc.ProcReport.proclist:type_name -> open_app_desc.ReportItem
	5,  // 5: open_app_desc.SetQuotaReq.itemlist:type_name -> open_app_desc.ReportItem
	11, // 6: open_app_desc.SetQuotaReq.procitem:type_name -> open_app_desc.ProcReport
	13, // 7: open_app_desc.SetQuotaRsp.procq:type_name -> open_app_desc.ProcQ
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_open_app_desc_proto_init() }
func file_open_app_desc_proto_init() {
	if File_open_app_desc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_open_app_desc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmdBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_app_desc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmdBaseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_app_desc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*L5Cfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_app_desc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Flux); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_app_desc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_app_desc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuotaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_app_desc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuotaRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_app_desc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_app_desc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMacInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_app_desc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_app_desc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_app_desc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetQuotaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_app_desc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_app_desc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetQuotaRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_app_desc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RealReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_app_desc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_open_app_desc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_open_app_desc_proto_goTypes,
		DependencyIndexes: file_open_app_desc_proto_depIdxs,
		EnumInfos:         file_open_app_desc_proto_enumTypes,
		MessageInfos:      file_open_app_desc_proto_msgTypes,
	}.Build()
	File_open_app_desc_proto = out.File
	file_open_app_desc_proto_rawDesc = nil
	file_open_app_desc_proto_goTypes = nil
	file_open_app_desc_proto_depIdxs = nil
}
